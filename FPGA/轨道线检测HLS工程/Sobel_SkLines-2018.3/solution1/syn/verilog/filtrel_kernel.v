// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filtrel_kernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_data_stream_V_dout,
        src_data_stream_V_empty_n,
        src_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_data_stream_V_dout;
input   src_data_stream_V_empty_n;
output   src_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_V_read;
reg[7:0] dst_data_stream_V_din;
reg dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_data_stream_V_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond7_fu_374_p2;
reg    dst_data_stream_V_blk_n;
wire    ap_CS_fsm_state11;
wire   [0:0] Line_Flag2_q0;
wire   [4:0] count_2_fu_350_p2;
reg   [4:0] count_2_reg_597;
wire    ap_CS_fsm_state2;
wire   [11:0] next_mul_fu_356_p2;
reg   [11:0] next_mul_reg_602;
wire    ap_CS_fsm_state3;
wire   [3:0] yi_3_fu_368_p2;
reg   [3:0] yi_3_reg_610;
wire   [8:0] xi_3_fu_380_p2;
reg    ap_block_state4;
wire   [4:0] i_2_fu_407_p2;
reg   [4:0] i_2_reg_626;
wire    ap_CS_fsm_state5;
reg   [4:0] Line_Flag2_addr_reg_631;
wire   [0:0] exitcond6_fu_401_p2;
wire   [8:0] p_shl_cast_fu_426_p1;
reg   [8:0] p_shl_cast_reg_636;
wire   [6:0] p_shl9_cast_cast_fu_438_p1;
reg   [6:0] p_shl9_cast_cast_reg_641;
wire   [31:0] j_2_fu_460_p2;
reg   [31:0] j_2_reg_649;
wire    ap_CS_fsm_state6;
wire  signed [12:0] tmp_18_fu_588_p2;
reg  signed [12:0] tmp_18_reg_654;
wire   [0:0] or_cond7_fu_454_p2;
wire   [0:0] tmp_19_fu_474_p2;
reg   [0:0] tmp_19_reg_659;
wire    ap_CS_fsm_state7;
wire   [3:0] k_2_fu_480_p2;
reg   [3:0] k_2_reg_663;
wire   [3:0] yi_4_fu_549_p2;
reg   [3:0] yi_4_reg_682;
wire    ap_CS_fsm_state9;
wire   [8:0] xi_4_fu_561_p2;
reg   [8:0] xi_4_reg_690;
wire    ap_CS_fsm_state10;
wire   [17:0] next_mul2_fu_567_p2;
reg   [17:0] next_mul2_reg_695;
wire   [0:0] exitcond3_fu_555_p2;
reg   [11:0] line_buf1_address0;
reg    line_buf1_ce0;
reg    line_buf1_we0;
wire   [7:0] line_buf1_q0;
reg   [4:0] Line_Flag2_address0;
reg    Line_Flag2_ce0;
reg    Line_Flag2_we0;
reg   [0:0] Line_Flag2_d0;
reg   [4:0] count_reg_172;
reg    ap_block_state1;
wire   [0:0] exitcond_fu_543_p2;
reg   [3:0] yi_reg_183;
wire   [0:0] exitcond8_fu_344_p2;
reg   [11:0] phi_mul_reg_194;
reg   [8:0] xi_reg_206;
wire   [0:0] exitcond4_fu_362_p2;
reg   [4:0] i_reg_217;
reg   [31:0] temp_reg_228;
reg   [31:0] temp_1_reg_262;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_23_fu_514_p2;
wire   [0:0] icmp_fu_537_p2;
reg   [0:0] flag_reg_240;
reg   [0:0] ap_phi_mux_flag_be_phi_fu_302_p4;
reg   [31:0] j_reg_251;
reg   [31:0] ap_phi_mux_temp_1_be_phi_fu_289_p4;
reg   [3:0] k_reg_274;
wire   [31:0] temp_3_fu_520_p2;
reg   [0:0] flag_be_reg_297;
reg   [3:0] yi1_reg_311;
reg   [8:0] xi2_reg_322;
reg    ap_block_state11;
reg   [17:0] phi_mul2_reg_333;
wire   [63:0] p_sum1_cast_fu_396_p1;
wire   [63:0] tmp_s_fu_413_p1;
wire  signed [63:0] p_sum_cast_fu_509_p1;
wire   [63:0] tmp_20_fu_583_p1;
wire   [11:0] tmp_54_cast_fu_386_p1;
wire   [11:0] p_sum1_fu_390_p2;
wire   [7:0] p_shl_fu_418_p3;
wire   [5:0] p_shl9_fu_430_p3;
wire   [0:0] tmp_16_fu_442_p2;
wire   [0:0] tmp_17_fu_448_p2;
wire   [6:0] k_cast8_cast_fu_470_p1;
wire   [6:0] tmp1_fu_486_p2;
wire   [8:0] tmp1_cast_fu_491_p1;
wire   [8:0] tmp_22_fu_495_p2;
wire   [12:0] tmp_61_cast_fu_500_p1;
(* use_dsp48 = "no" *) wire   [12:0] p_sum_fu_504_p2;
wire   [27:0] tmp_13_fu_527_p4;
wire   [4:0] tmp_12_fu_573_p4;
wire   [9:0] tmp_18_fu_588_p0;
wire  signed [12:0] tmp_18_fu_588_p1;
reg   [10:0] ap_NS_fsm;
reg    ap_condition_260;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

filtrel_kernel_likbM #(
    .DataWidth( 8 ),
    .AddressRange( 2900 ),
    .AddressWidth( 12 ))
line_buf1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf1_address0),
    .ce0(line_buf1_ce0),
    .we0(line_buf1_we0),
    .d0(src_data_stream_V_dout),
    .q0(line_buf1_q0)
);

filtrel_kernel_LilbW #(
    .DataWidth( 1 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
Line_Flag2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Line_Flag2_address0),
    .ce0(Line_Flag2_ce0),
    .we0(Line_Flag2_we0),
    .d0(Line_Flag2_d0),
    .q0(Line_Flag2_q0)
);

TOP_fuct_mul_mul_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 13 ))
TOP_fuct_mul_mul_mb6_U99(
    .din0(tmp_18_fu_588_p0),
    .din1(tmp_18_fu_588_p1),
    .dout(tmp_18_fu_588_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond8_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        count_reg_172 <= count_2_reg_597;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        count_reg_172 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_fu_474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        flag_be_reg_297 <= 1'd0;
    end else if (((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1) & (tmp_19_reg_659 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        flag_be_reg_297 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_19_reg_659 == 1'd0) | ((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1))))) begin
        flag_reg_240 <= ap_phi_mux_flag_be_phi_fu_302_p4;
    end else if (((exitcond6_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        flag_reg_240 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_217 <= 5'd0;
    end else if (((or_cond7_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_reg_217 <= i_2_reg_626;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_19_reg_659 == 1'd0) | ((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1))))) begin
        j_reg_251 <= j_2_reg_649;
    end else if (((exitcond6_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_reg_251 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((tmp_19_reg_659 == 1'd1) & (tmp_23_fu_514_p2 == 1'd0)) | ((tmp_19_reg_659 == 1'd1) & (icmp_fu_537_p2 == 1'd0))))) begin
        k_reg_274 <= k_2_reg_663;
    end else if (((or_cond7_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        k_reg_274 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_mul2_reg_333 <= 18'd0;
    end else if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_mul2_reg_333 <= next_mul2_reg_695;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_194 <= 12'd0;
    end else if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_194 <= next_mul_reg_602;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((tmp_19_reg_659 == 1'd1) & (tmp_23_fu_514_p2 == 1'd0)) | ((tmp_19_reg_659 == 1'd1) & (icmp_fu_537_p2 == 1'd0))))) begin
        temp_1_reg_262 <= ap_phi_mux_temp_1_be_phi_fu_289_p4;
    end else if (((or_cond7_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        temp_1_reg_262 <= temp_reg_228;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_19_reg_659 == 1'd0) | ((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1))))) begin
        temp_reg_228 <= temp_1_reg_262;
    end else if (((exitcond6_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        temp_reg_228 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        xi2_reg_322 <= 9'd0;
    end else if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
        xi2_reg_322 <= xi_4_reg_690;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        xi_reg_206 <= 9'd0;
    end else if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        xi_reg_206 <= xi_3_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_401_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        yi1_reg_311 <= 4'd0;
    end else if (((exitcond3_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        yi1_reg_311 <= yi_4_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        yi_reg_183 <= 4'd0;
    end else if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        yi_reg_183 <= yi_3_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        Line_Flag2_addr_reg_631 <= tmp_s_fu_413_p1;
        p_shl9_cast_cast_reg_641[5 : 1] <= p_shl9_cast_cast_fu_438_p1[5 : 1];
        p_shl_cast_reg_636[7 : 3] <= p_shl_cast_fu_426_p1[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        count_2_reg_597 <= count_2_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_2_reg_626 <= i_2_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_2_reg_649 <= j_2_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_2_reg_663 <= k_2_fu_480_p2;
        tmp_19_reg_659 <= tmp_19_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        next_mul2_reg_695 <= next_mul2_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        next_mul_reg_602 <= next_mul_fu_356_p2;
        yi_3_reg_610 <= yi_3_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond7_fu_454_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_18_reg_654 <= tmp_18_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        xi_4_reg_690 <= xi_4_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        yi_4_reg_682 <= yi_4_fu_549_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Line_Flag2_address0 = tmp_20_fu_583_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Line_Flag2_address0 = Line_Flag2_addr_reg_631;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Line_Flag2_address0 = tmp_s_fu_413_p1;
    end else begin
        Line_Flag2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        Line_Flag2_ce0 = 1'b1;
    end else begin
        Line_Flag2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Line_Flag2_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Line_Flag2_d0 = 1'd0;
    end else begin
        Line_Flag2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond6_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1) & (tmp_19_reg_659 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        Line_Flag2_we0 = 1'b1;
    end else begin
        Line_Flag2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1) & (tmp_19_reg_659 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_flag_be_phi_fu_302_p4 = 1'd1;
    end else begin
        ap_phi_mux_flag_be_phi_fu_302_p4 = flag_be_reg_297;
    end
end

always @ (*) begin
    if (((tmp_19_reg_659 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        if (((tmp_23_fu_514_p2 == 1'd1) & (icmp_fu_537_p2 == 1'd0))) begin
            ap_phi_mux_temp_1_be_phi_fu_289_p4 = temp_1_reg_262;
        end else if ((tmp_23_fu_514_p2 == 1'd0)) begin
            ap_phi_mux_temp_1_be_phi_fu_289_p4 = temp_3_fu_520_p2;
        end else begin
            ap_phi_mux_temp_1_be_phi_fu_289_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_temp_1_be_phi_fu_289_p4 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond8_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)) | ((1'd1 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_260)) begin
        if ((1'd1 == Line_Flag2_q0)) begin
            dst_data_stream_V_din = 8'd0;
        end else if ((1'd0 == Line_Flag2_q0)) begin
            dst_data_stream_V_din = 8'd255;
        end else begin
            dst_data_stream_V_din = 'bx;
        end
    end else begin
        dst_data_stream_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'd0 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)) | (~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'd1 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buf1_address0 = p_sum_cast_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buf1_address0 = p_sum1_cast_fu_396_p1;
    end else begin
        line_buf1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        line_buf1_ce0 = 1'b1;
    end else begin
        line_buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_buf1_we0 = 1'b1;
    end else begin
        line_buf1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        src_data_stream_V_blk_n = src_data_stream_V_empty_n;
    end else begin
        src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        src_data_stream_V_read = 1'b1;
    end else begin
        src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond8_fu_344_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond4_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond6_fu_401_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((or_cond7_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ((tmp_19_reg_659 == 1'd0) | ((icmp_fu_537_p2 == 1'd1) & (tmp_23_fu_514_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((exitcond3_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state11 = (((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = ((exitcond7_fu_374_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_260 = (~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11));
end

assign count_2_fu_350_p2 = (count_reg_172 + 5'd1);

assign exitcond3_fu_555_p2 = ((xi2_reg_322 == 9'd290) ? 1'b1 : 1'b0);

assign exitcond4_fu_362_p2 = ((yi_reg_183 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond6_fu_401_p2 = ((i_reg_217 == 5'd29) ? 1'b1 : 1'b0);

assign exitcond7_fu_374_p2 = ((xi_reg_206 == 9'd290) ? 1'b1 : 1'b0);

assign exitcond8_fu_344_p2 = ((count_reg_172 == 5'd18) ? 1'b1 : 1'b0);

assign exitcond_fu_543_p2 = ((yi1_reg_311 == 4'd10) ? 1'b1 : 1'b0);

assign i_2_fu_407_p2 = (i_reg_217 + 5'd1);

assign icmp_fu_537_p2 = (($signed(tmp_13_fu_527_p4) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign j_2_fu_460_p2 = (j_reg_251 + 32'd1);

assign k_2_fu_480_p2 = (k_reg_274 + 4'd1);

assign k_cast8_cast_fu_470_p1 = k_reg_274;

assign next_mul2_fu_567_p2 = (phi_mul2_reg_333 + 18'd820);

assign next_mul_fu_356_p2 = (phi_mul_reg_194 + 12'd290);

assign or_cond7_fu_454_p2 = (tmp_17_fu_448_p2 & tmp_16_fu_442_p2);

assign p_shl9_cast_cast_fu_438_p1 = p_shl9_fu_430_p3;

assign p_shl9_fu_430_p3 = {{i_reg_217}, {1'd0}};

assign p_shl_cast_fu_426_p1 = p_shl_fu_418_p3;

assign p_shl_fu_418_p3 = {{i_reg_217}, {3'd0}};

assign p_sum1_cast_fu_396_p1 = p_sum1_fu_390_p2;

assign p_sum1_fu_390_p2 = (phi_mul_reg_194 + tmp_54_cast_fu_386_p1);

assign p_sum_cast_fu_509_p1 = $signed(p_sum_fu_504_p2);

assign p_sum_fu_504_p2 = ($signed(tmp_18_reg_654) + $signed(tmp_61_cast_fu_500_p1));

assign temp_3_fu_520_p2 = (temp_1_reg_262 + 32'd1);

assign tmp1_cast_fu_491_p1 = tmp1_fu_486_p2;

assign tmp1_fu_486_p2 = (p_shl9_cast_cast_reg_641 + k_cast8_cast_fu_470_p1);

assign tmp_12_fu_573_p4 = {{phi_mul2_reg_333[17:13]}};

assign tmp_13_fu_527_p4 = {{temp_1_reg_262[31:4]}};

assign tmp_16_fu_442_p2 = (($signed(j_reg_251) < $signed(32'd10)) ? 1'b1 : 1'b0);

assign tmp_17_fu_448_p2 = (flag_reg_240 ^ 1'd1);

assign tmp_18_fu_588_p0 = 13'd290;

assign tmp_18_fu_588_p1 = j_reg_251[12:0];

assign tmp_19_fu_474_p2 = ((k_reg_274 < 4'd10) ? 1'b1 : 1'b0);

assign tmp_20_fu_583_p1 = tmp_12_fu_573_p4;

assign tmp_22_fu_495_p2 = (tmp1_cast_fu_491_p1 + p_shl_cast_reg_636);

assign tmp_23_fu_514_p2 = ((line_buf1_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_54_cast_fu_386_p1 = xi_reg_206;

assign tmp_61_cast_fu_500_p1 = tmp_22_fu_495_p2;

assign tmp_s_fu_413_p1 = i_reg_217;

assign xi_3_fu_380_p2 = (xi_reg_206 + 9'd1);

assign xi_4_fu_561_p2 = (xi2_reg_322 + 9'd1);

assign yi_3_fu_368_p2 = (yi_reg_183 + 4'd1);

assign yi_4_fu_549_p2 = (yi1_reg_311 + 4'd1);

always @ (posedge ap_clk) begin
    p_shl_cast_reg_636[2:0] <= 3'b000;
    p_shl_cast_reg_636[8] <= 1'b0;
    p_shl9_cast_cast_reg_641[0] <= 1'b0;
    p_shl9_cast_cast_reg_641[6] <= 1'b0;
end

endmodule //filtrel_kernel
