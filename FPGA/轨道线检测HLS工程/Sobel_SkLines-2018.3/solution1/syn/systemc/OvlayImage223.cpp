// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "OvlayImage223.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic OvlayImage223::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic OvlayImage223::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> OvlayImage223::ap_ST_fsm_state1 = "1";
const sc_lv<4> OvlayImage223::ap_ST_fsm_state2 = "10";
const sc_lv<4> OvlayImage223::ap_ST_fsm_state3 = "100";
const sc_lv<4> OvlayImage223::ap_ST_fsm_state4 = "1000";
const bool OvlayImage223::ap_const_boolean_1 = true;
const sc_lv<32> OvlayImage223::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> OvlayImage223::ap_const_lv32_3 = "11";
const sc_lv<1> OvlayImage223::ap_const_lv1_1 = "1";
const sc_lv<1> OvlayImage223::ap_const_lv1_0 = "0";
const sc_lv<32> OvlayImage223::ap_const_lv32_1 = "1";
const sc_lv<32> OvlayImage223::ap_const_lv32_2 = "10";
const sc_lv<8> OvlayImage223::ap_const_lv8_0 = "00000000";
const sc_lv<9> OvlayImage223::ap_const_lv9_0 = "000000000";
const sc_lv<64> OvlayImage223::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> OvlayImage223::ap_const_lv64_1 = "1";
const sc_lv<8> OvlayImage223::ap_const_lv8_B4 = "10110100";
const sc_lv<8> OvlayImage223::ap_const_lv8_1 = "1";
const sc_lv<9> OvlayImage223::ap_const_lv9_122 = "100100010";
const sc_lv<9> OvlayImage223::ap_const_lv9_1 = "1";
const sc_lv<7> OvlayImage223::ap_const_lv7_5A = "1011010";
const sc_lv<8> OvlayImage223::ap_const_lv8_91 = "10010001";

OvlayImage223::OvlayImage223(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_StartLoc_address0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_StartLoc_address1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_StartLoc_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_StartLoc_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_136_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op59_write_state4);
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( tmp_61_fu_238_p2 );

    SC_METHOD(thread_ap_predicate_op62_write_state4);
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( tmp_61_fu_238_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_dst_data_stream_V_blk_n);
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( tmp_61_fu_238_p2 );

    SC_METHOD(thread_dst_data_stream_V_din);
    sensitive << ( src_data_stream_V_dout );
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_dst_data_stream_V_write);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_exitcond2_fu_136_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_112 );

    SC_METHOD(thread_exitcond_fu_148_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_124 );

    SC_METHOD(thread_extLd26_cast_cast3_fu_160_p1);
    sensitive << ( StartLoc_q0 );

    SC_METHOD(thread_extLd_cast2_cast_fu_190_p1);
    sensitive << ( StartLoc_q1 );

    SC_METHOD(thread_i_8_fu_142_p2);
    sensitive << ( i_reg_112 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_136_p2 );

    SC_METHOD(thread_j_5_fu_154_p2);
    sensitive << ( j_reg_124 );

    SC_METHOD(thread_ovlaysrc_data_stream_V_blk_n);
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );

    SC_METHOD(thread_ovlaysrc_data_stream_V_read);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rev2_fu_200_p2);
    sensitive << ( ult2_fu_194_p2 );

    SC_METHOD(thread_rev_fu_170_p2);
    sensitive << ( ult_fu_164_p2 );

    SC_METHOD(thread_src_data_stream_V_blk_n);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_src_data_stream_V_read);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp1_fu_220_p2);
    sensitive << ( rev_fu_170_p2 );
    sensitive << ( tmp_57_fu_184_p2 );

    SC_METHOD(thread_tmp2_fu_226_p2);
    sensitive << ( tmp_59_fu_214_p2 );
    sensitive << ( rev2_fu_200_p2 );

    SC_METHOD(thread_tmp_57_fu_184_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( i_reg_112 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );
    sensitive << ( tmp_s_fu_176_p3 );

    SC_METHOD(thread_tmp_58_fu_206_p3);
    sensitive << ( StartLoc_q1 );

    SC_METHOD(thread_tmp_59_fu_214_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( j_reg_124 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );
    sensitive << ( tmp_58_fu_206_p3 );

    SC_METHOD(thread_tmp_60_fu_232_p2);
    sensitive << ( tmp2_fu_226_p2 );
    sensitive << ( tmp1_fu_220_p2 );

    SC_METHOD(thread_tmp_61_fu_238_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_dout );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );

    SC_METHOD(thread_tmp_s_fu_176_p3);
    sensitive << ( StartLoc_q0 );

    SC_METHOD(thread_ult2_fu_194_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( j_reg_124 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );
    sensitive << ( extLd_cast2_cast_fu_190_p1 );

    SC_METHOD(thread_ult_fu_164_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( i_reg_112 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );
    sensitive << ( extLd26_cast_cast3_fu_160_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ovlaysrc_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_60_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_148_p2 );
    sensitive << ( ap_predicate_op59_write_state4 );
    sensitive << ( ap_predicate_op62_write_state4 );
    sensitive << ( exitcond2_fu_136_p2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "OvlayImage223_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, src_data_stream_V_dout, "(port)src_data_stream_V_dout");
    sc_trace(mVcdFile, src_data_stream_V_empty_n, "(port)src_data_stream_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_V_read, "(port)src_data_stream_V_read");
    sc_trace(mVcdFile, ovlaysrc_data_stream_V_dout, "(port)ovlaysrc_data_stream_V_dout");
    sc_trace(mVcdFile, ovlaysrc_data_stream_V_empty_n, "(port)ovlaysrc_data_stream_V_empty_n");
    sc_trace(mVcdFile, ovlaysrc_data_stream_V_read, "(port)ovlaysrc_data_stream_V_read");
    sc_trace(mVcdFile, dst_data_stream_V_din, "(port)dst_data_stream_V_din");
    sc_trace(mVcdFile, dst_data_stream_V_full_n, "(port)dst_data_stream_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_V_write, "(port)dst_data_stream_V_write");
    sc_trace(mVcdFile, StartLoc_address0, "(port)StartLoc_address0");
    sc_trace(mVcdFile, StartLoc_ce0, "(port)StartLoc_ce0");
    sc_trace(mVcdFile, StartLoc_q0, "(port)StartLoc_q0");
    sc_trace(mVcdFile, StartLoc_address1, "(port)StartLoc_address1");
    sc_trace(mVcdFile, StartLoc_ce1, "(port)StartLoc_ce1");
    sc_trace(mVcdFile, StartLoc_q1, "(port)StartLoc_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, src_data_stream_V_blk_n, "src_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ovlaysrc_data_stream_V_blk_n, "ovlaysrc_data_stream_V_blk_n");
    sc_trace(mVcdFile, tmp_60_fu_232_p2, "tmp_60_fu_232_p2");
    sc_trace(mVcdFile, dst_data_stream_V_blk_n, "dst_data_stream_V_blk_n");
    sc_trace(mVcdFile, tmp_61_fu_238_p2, "tmp_61_fu_238_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_8_fu_142_p2, "i_8_fu_142_p2");
    sc_trace(mVcdFile, i_8_reg_257, "i_8_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_5_fu_154_p2, "j_5_fu_154_p2");
    sc_trace(mVcdFile, j_5_reg_265, "j_5_reg_265");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_reg_112, "i_reg_112");
    sc_trace(mVcdFile, exitcond_fu_148_p2, "exitcond_fu_148_p2");
    sc_trace(mVcdFile, j_reg_124, "j_reg_124");
    sc_trace(mVcdFile, ap_predicate_op59_write_state4, "ap_predicate_op59_write_state4");
    sc_trace(mVcdFile, ap_predicate_op62_write_state4, "ap_predicate_op62_write_state4");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, exitcond2_fu_136_p2, "exitcond2_fu_136_p2");
    sc_trace(mVcdFile, extLd26_cast_cast3_fu_160_p1, "extLd26_cast_cast3_fu_160_p1");
    sc_trace(mVcdFile, ult_fu_164_p2, "ult_fu_164_p2");
    sc_trace(mVcdFile, tmp_s_fu_176_p3, "tmp_s_fu_176_p3");
    sc_trace(mVcdFile, extLd_cast2_cast_fu_190_p1, "extLd_cast2_cast_fu_190_p1");
    sc_trace(mVcdFile, ult2_fu_194_p2, "ult2_fu_194_p2");
    sc_trace(mVcdFile, tmp_58_fu_206_p3, "tmp_58_fu_206_p3");
    sc_trace(mVcdFile, rev_fu_170_p2, "rev_fu_170_p2");
    sc_trace(mVcdFile, tmp_57_fu_184_p2, "tmp_57_fu_184_p2");
    sc_trace(mVcdFile, tmp_59_fu_214_p2, "tmp_59_fu_214_p2");
    sc_trace(mVcdFile, rev2_fu_200_p2, "rev2_fu_200_p2");
    sc_trace(mVcdFile, tmp2_fu_226_p2, "tmp2_fu_226_p2");
    sc_trace(mVcdFile, tmp1_fu_220_p2, "tmp1_fu_220_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

OvlayImage223::~OvlayImage223() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void OvlayImage223::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_136_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_148_p2.read()))) {
        i_reg_112 = i_8_reg_257.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_112 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_136_p2.read()))) {
        j_reg_124 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()))))) {
        j_reg_124 = j_5_reg_265.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_8_reg_257 = i_8_fu_142_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_5_reg_265 = j_5_fu_154_p2.read();
    }
}

void OvlayImage223::thread_StartLoc_address0() {
    StartLoc_address0 =  (sc_lv<1>) (ap_const_lv64_0);
}

void OvlayImage223::thread_StartLoc_address1() {
    StartLoc_address1 =  (sc_lv<1>) (ap_const_lv64_1);
}

void OvlayImage223::thread_StartLoc_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        StartLoc_ce0 = ap_const_logic_1;
    } else {
        StartLoc_ce0 = ap_const_logic_0;
    }
}

void OvlayImage223::thread_StartLoc_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        StartLoc_ce1 = ap_const_logic_1;
    } else {
        StartLoc_ce1 = ap_const_logic_0;
    }
}

void OvlayImage223::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void OvlayImage223::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void OvlayImage223::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void OvlayImage223::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void OvlayImage223::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void OvlayImage223::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())));
}

void OvlayImage223::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_136_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void OvlayImage223::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void OvlayImage223::thread_ap_predicate_op59_write_state4() {
    ap_predicate_op59_write_state4 = (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_61_fu_238_p2.read(), ap_const_lv1_0));
}

void OvlayImage223::thread_ap_predicate_op62_write_state4() {
    ap_predicate_op62_write_state4 = (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_61_fu_238_p2.read()));
}

void OvlayImage223::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void OvlayImage223::thread_dst_data_stream_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_61_fu_238_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_61_fu_238_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0)))) {
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n.read();
    } else {
        dst_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void OvlayImage223::thread_dst_data_stream_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()))))) {
        dst_data_stream_V_din = ap_const_lv8_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())))) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read()) && 
                 !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())))))) {
        dst_data_stream_V_din = src_data_stream_V_dout.read();
    } else {
        dst_data_stream_V_din = "XXXXXXXX";
    }
}

void OvlayImage223::thread_dst_data_stream_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read())))))) {
        dst_data_stream_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_V_write = ap_const_logic_0;
    }
}

void OvlayImage223::thread_exitcond2_fu_136_p2() {
    exitcond2_fu_136_p2 = (!i_reg_112.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_112.read() == ap_const_lv8_B4);
}

void OvlayImage223::thread_exitcond_fu_148_p2() {
    exitcond_fu_148_p2 = (!j_reg_124.read().is_01() || !ap_const_lv9_122.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_124.read() == ap_const_lv9_122);
}

void OvlayImage223::thread_extLd26_cast_cast3_fu_160_p1() {
    extLd26_cast_cast3_fu_160_p1 = esl_zext<8,1>(StartLoc_q0.read());
}

void OvlayImage223::thread_extLd_cast2_cast_fu_190_p1() {
    extLd_cast2_cast_fu_190_p1 = esl_zext<9,1>(StartLoc_q1.read());
}

void OvlayImage223::thread_i_8_fu_142_p2() {
    i_8_fu_142_p2 = (!i_reg_112.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_112.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void OvlayImage223::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_136_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void OvlayImage223::thread_j_5_fu_154_p2() {
    j_5_fu_154_p2 = (!j_reg_124.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_reg_124.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void OvlayImage223::thread_ovlaysrc_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1))) {
        ovlaysrc_data_stream_V_blk_n = ovlaysrc_data_stream_V_empty_n.read();
    } else {
        ovlaysrc_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void OvlayImage223::thread_ovlaysrc_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()))))) {
        ovlaysrc_data_stream_V_read = ap_const_logic_1;
    } else {
        ovlaysrc_data_stream_V_read = ap_const_logic_0;
    }
}

void OvlayImage223::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void OvlayImage223::thread_rev2_fu_200_p2() {
    rev2_fu_200_p2 = (ult2_fu_194_p2.read() ^ ap_const_lv1_1);
}

void OvlayImage223::thread_rev_fu_170_p2() {
    rev_fu_170_p2 = (ult_fu_164_p2.read() ^ ap_const_lv1_1);
}

void OvlayImage223::thread_src_data_stream_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        src_data_stream_V_blk_n = src_data_stream_V_empty_n.read();
    } else {
        src_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void OvlayImage223::thread_src_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()))))) {
        src_data_stream_V_read = ap_const_logic_1;
    } else {
        src_data_stream_V_read = ap_const_logic_0;
    }
}

void OvlayImage223::thread_start_out() {
    start_out = real_start.read();
}

void OvlayImage223::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void OvlayImage223::thread_tmp1_fu_220_p2() {
    tmp1_fu_220_p2 = (rev_fu_170_p2.read() & tmp_57_fu_184_p2.read());
}

void OvlayImage223::thread_tmp2_fu_226_p2() {
    tmp2_fu_226_p2 = (tmp_59_fu_214_p2.read() & rev2_fu_200_p2.read());
}

void OvlayImage223::thread_tmp_57_fu_184_p2() {
    tmp_57_fu_184_p2 = (!i_reg_112.read().is_01() || !tmp_s_fu_176_p3.read().is_01())? sc_lv<1>(): (sc_biguint<8>(i_reg_112.read()) < sc_biguint<8>(tmp_s_fu_176_p3.read()));
}

void OvlayImage223::thread_tmp_58_fu_206_p3() {
    tmp_58_fu_206_p3 = esl_concat<8,1>(ap_const_lv8_91, StartLoc_q1.read());
}

void OvlayImage223::thread_tmp_59_fu_214_p2() {
    tmp_59_fu_214_p2 = (!j_reg_124.read().is_01() || !tmp_58_fu_206_p3.read().is_01())? sc_lv<1>(): (sc_biguint<9>(j_reg_124.read()) < sc_biguint<9>(tmp_58_fu_206_p3.read()));
}

void OvlayImage223::thread_tmp_60_fu_232_p2() {
    tmp_60_fu_232_p2 = (tmp2_fu_226_p2.read() & tmp1_fu_220_p2.read());
}

void OvlayImage223::thread_tmp_61_fu_238_p2() {
    tmp_61_fu_238_p2 = (!ovlaysrc_data_stream_V_dout.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(ovlaysrc_data_stream_V_dout.read() == ap_const_lv8_0);
}

void OvlayImage223::thread_tmp_s_fu_176_p3() {
    tmp_s_fu_176_p3 = esl_concat<7,1>(ap_const_lv7_5A, StartLoc_q0.read());
}

void OvlayImage223::thread_ult2_fu_194_p2() {
    ult2_fu_194_p2 = (!j_reg_124.read().is_01() || !extLd_cast2_cast_fu_190_p1.read().is_01())? sc_lv<1>(): (sc_biguint<9>(j_reg_124.read()) < sc_biguint<9>(extLd_cast2_cast_fu_190_p1.read()));
}

void OvlayImage223::thread_ult_fu_164_p2() {
    ult_fu_164_p2 = (!i_reg_112.read().is_01() || !extLd26_cast_cast3_fu_160_p1.read().is_01())? sc_lv<1>(): (sc_biguint<8>(i_reg_112.read()) < sc_biguint<8>(extLd26_cast_cast3_fu_160_p1.read()));
}

void OvlayImage223::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_136_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_148_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read()) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read())) || (esl_seteq<1,1,1>(tmp_60_fu_232_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ovlaysrc_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op59_write_state4.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op62_write_state4.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

