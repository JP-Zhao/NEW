// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _OvlayImage225_HH_
#define _OvlayImage225_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct OvlayImage225 : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > src_data_stream_V_dout;
    sc_in< sc_logic > src_data_stream_V_empty_n;
    sc_out< sc_logic > src_data_stream_V_read;
    sc_in< sc_lv<8> > ovlaysrc_data_stream_V_dout;
    sc_in< sc_logic > ovlaysrc_data_stream_V_empty_n;
    sc_out< sc_logic > ovlaysrc_data_stream_V_read;
    sc_out< sc_lv<8> > dst_data_stream_V_din;
    sc_in< sc_logic > dst_data_stream_V_full_n;
    sc_out< sc_logic > dst_data_stream_V_write;
    sc_out< sc_lv<1> > StartLoc_address0;
    sc_out< sc_logic > StartLoc_ce0;
    sc_in< sc_lv<1> > StartLoc_q0;
    sc_out< sc_lv<1> > StartLoc_address1;
    sc_out< sc_logic > StartLoc_ce1;
    sc_in< sc_lv<1> > StartLoc_q1;


    // Module declarations
    OvlayImage225(sc_module_name name);
    SC_HAS_PROCESS(OvlayImage225);

    ~OvlayImage225();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > src_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ovlaysrc_data_stream_V_blk_n;
    sc_signal< sc_lv<1> > tmp_55_fu_232_p2;
    sc_signal< sc_logic > dst_data_stream_V_blk_n;
    sc_signal< sc_lv<1> > tmp_56_fu_238_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<8> > i_7_fu_142_p2;
    sc_signal< sc_lv<8> > i_7_reg_257;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > j_4_fu_154_p2;
    sc_signal< sc_lv<9> > j_4_reg_265;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > i_reg_112;
    sc_signal< sc_lv<1> > exitcond_fu_148_p2;
    sc_signal< sc_lv<9> > j_reg_124;
    sc_signal< bool > ap_predicate_op59_write_state4;
    sc_signal< bool > ap_predicate_op62_write_state4;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<1> > exitcond2_fu_136_p2;
    sc_signal< sc_lv<8> > extLd26_cast_cast3_fu_160_p1;
    sc_signal< sc_lv<1> > ult_fu_164_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_176_p3;
    sc_signal< sc_lv<9> > extLd_cast1_cast_fu_190_p1;
    sc_signal< sc_lv<1> > ult1_fu_194_p2;
    sc_signal< sc_lv<9> > tmp_53_fu_206_p3;
    sc_signal< sc_lv<1> > rev_fu_170_p2;
    sc_signal< sc_lv<1> > tmp_52_fu_184_p2;
    sc_signal< sc_lv<1> > tmp_54_fu_214_p2;
    sc_signal< sc_lv<1> > rev1_fu_200_p2;
    sc_signal< sc_lv<1> > tmp2_fu_226_p2;
    sc_signal< sc_lv<1> > tmp1_fu_220_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<8> ap_const_lv8_B4;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_122;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<7> ap_const_lv7_5A;
    static const sc_lv<8> ap_const_lv8_87;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_StartLoc_address0();
    void thread_StartLoc_address1();
    void thread_StartLoc_ce0();
    void thread_StartLoc_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op59_write_state4();
    void thread_ap_predicate_op62_write_state4();
    void thread_ap_ready();
    void thread_dst_data_stream_V_blk_n();
    void thread_dst_data_stream_V_din();
    void thread_dst_data_stream_V_write();
    void thread_exitcond2_fu_136_p2();
    void thread_exitcond_fu_148_p2();
    void thread_extLd26_cast_cast3_fu_160_p1();
    void thread_extLd_cast1_cast_fu_190_p1();
    void thread_i_7_fu_142_p2();
    void thread_internal_ap_ready();
    void thread_j_4_fu_154_p2();
    void thread_ovlaysrc_data_stream_V_blk_n();
    void thread_ovlaysrc_data_stream_V_read();
    void thread_real_start();
    void thread_rev1_fu_200_p2();
    void thread_rev_fu_170_p2();
    void thread_src_data_stream_V_blk_n();
    void thread_src_data_stream_V_read();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_220_p2();
    void thread_tmp2_fu_226_p2();
    void thread_tmp_52_fu_184_p2();
    void thread_tmp_53_fu_206_p3();
    void thread_tmp_54_fu_214_p2();
    void thread_tmp_55_fu_232_p2();
    void thread_tmp_56_fu_238_p2();
    void thread_tmp_s_fu_176_p3();
    void thread_ult1_fu_194_p2();
    void thread_ult_fu_164_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
