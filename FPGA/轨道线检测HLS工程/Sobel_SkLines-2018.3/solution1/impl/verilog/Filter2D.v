// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond460_i_reg_1416;
reg   [0:0] or_cond_i_i_reg_1425;
reg   [0:0] icmp_reg_1381;
reg   [0:0] tmp_2_reg_1372;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] or_cond_i_reg_1459;
reg   [0:0] or_cond_i_reg_1459_pp0_iter1_reg;
reg   [8:0] t_V_2_reg_311;
wire  signed [9:0] tmp_161_0_1_cast_fu_322_p1;
reg  signed [9:0] tmp_161_0_1_cast_reg_1333;
wire  signed [9:0] tmp_161_0_2_cast_fu_326_p1;
reg  signed [9:0] tmp_161_0_2_cast_reg_1338;
wire  signed [10:0] tmp_161_1_cast_fu_330_p1;
reg  signed [10:0] tmp_161_1_cast_reg_1343;
wire   [11:0] tmp_161_1_2_cast_fu_334_p1;
reg   [11:0] tmp_161_1_2_cast_reg_1348;
wire  signed [9:0] tmp_161_2_cast_fu_338_p1;
reg  signed [9:0] tmp_161_2_cast_reg_1353;
wire   [10:0] tmp_161_2_1_cast_fu_342_p1;
reg   [10:0] tmp_161_2_1_cast_reg_1358;
wire   [0:0] exitcond461_i_fu_350_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] i_V_fu_356_p2;
reg   [7:0] i_V_reg_1367;
wire   [0:0] tmp_2_fu_362_p2;
wire   [0:0] tmp_76_0_not_fu_368_p2;
reg   [0:0] tmp_76_0_not_reg_1376;
wire   [0:0] icmp_fu_384_p2;
wire   [0:0] tmp_1_fu_390_p2;
reg   [0:0] tmp_1_reg_1386;
wire   [0:0] tmp_120_1_fu_396_p2;
reg   [0:0] tmp_120_1_reg_1390;
wire   [0:0] tmp_12_fu_402_p2;
reg   [0:0] tmp_12_reg_1394;
wire   [1:0] row_assign_10_0_t_fu_556_p2;
reg   [1:0] row_assign_10_0_t_reg_1401;
wire   [1:0] row_assign_10_1_t_fu_594_p2;
reg   [1:0] row_assign_10_1_t_reg_1406;
wire   [1:0] row_assign_10_2_t_fu_632_p2;
reg   [1:0] row_assign_10_2_t_reg_1411;
wire   [0:0] exitcond460_i_fu_642_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op156_read_state4;
reg    ap_predicate_op167_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] j_V_fu_648_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_696_p2;
wire   [1:0] tmp_55_fu_782_p1;
reg   [1:0] tmp_55_reg_1429;
wire   [0:0] brmerge_fu_786_p2;
reg   [0:0] brmerge_reg_1434;
reg   [10:0] k_buf_0_val_3_addr_reg_1441;
reg   [10:0] k_buf_0_val_4_addr_reg_1447;
reg   [10:0] k_buf_0_val_5_addr_reg_1453;
wire   [0:0] or_cond_i_fu_798_p2;
wire   [7:0] p_Val2_9_fu_1194_p3;
reg   [7:0] p_Val2_9_reg_1463;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [7:0] t_V_reg_300;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_22_fu_791_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_138;
wire   [7:0] src_kernel_win_0_va_6_fu_930_p3;
reg   [7:0] src_kernel_win_0_va_1_fu_142;
reg   [7:0] src_kernel_win_0_va_2_fu_146;
wire   [7:0] src_kernel_win_0_va_7_fu_948_p3;
reg   [7:0] src_kernel_win_0_va_3_fu_150;
reg   [7:0] src_kernel_win_0_va_4_fu_154;
wire   [7:0] src_kernel_win_0_va_8_fu_966_p3;
reg   [7:0] src_kernel_win_0_va_5_fu_158;
reg   [7:0] right_border_buf_0_s_fu_162;
wire   [7:0] col_buf_0_val_0_0_fu_838_p3;
reg   [7:0] right_border_buf_0_1_fu_166;
reg   [7:0] right_border_buf_0_2_fu_170;
reg   [7:0] right_border_buf_0_3_fu_174;
wire   [7:0] col_buf_0_val_1_0_fu_857_p3;
reg   [7:0] right_border_buf_0_4_fu_178;
reg   [7:0] right_border_buf_0_5_fu_182;
wire   [7:0] col_buf_0_val_2_0_fu_876_p3;
wire   [6:0] tmp_28_fu_374_p4;
wire   [8:0] t_V_cast_fu_346_p1;
wire   [1:0] tmp_32_fu_408_p1;
wire   [8:0] tmp_14_fu_412_p2;
wire   [0:0] tmp_35_fu_424_p3;
wire   [0:0] tmp_16_fu_438_p2;
wire   [0:0] rev_fu_432_p2;
wire   [0:0] tmp_36_fu_450_p3;
wire   [8:0] p_assign_7_fu_458_p2;
wire   [8:0] p_p2_i497_i_fu_464_p3;
wire   [1:0] tmp_37_fu_472_p1;
wire   [8:0] p_assign_6_1_fu_488_p2;
wire   [8:0] p_assign_6_2_fu_514_p2;
wire   [0:0] tmp_18_fu_476_p2;
wire   [1:0] p_assign_8_fu_482_p2;
wire   [0:0] or_cond_i496_i_fu_444_p2;
wire   [1:0] tmp_30_cast_fu_418_p2;
wire   [1:0] p_p2_i497_i_p_assign_8_fu_540_p3;
wire   [1:0] y_fu_548_p3;
wire   [1:0] tmp_42_fu_510_p1;
wire   [0:0] tmp_40_fu_502_p3;
wire   [1:0] tmp_48_fu_568_p2;
wire   [1:0] tmp_49_fu_574_p1;
wire   [0:0] tmp_39_fu_494_p3;
wire   [1:0] tmp_44_fu_578_p3;
wire   [1:0] tmp_27_fu_562_p2;
wire   [1:0] tmp_29_fu_586_p3;
wire   [1:0] tmp_46_fu_536_p1;
wire   [0:0] tmp_45_fu_528_p3;
wire   [1:0] tmp_50_fu_606_p2;
wire   [1:0] tmp_51_fu_612_p1;
wire   [0:0] tmp_43_fu_520_p3;
wire   [1:0] tmp_47_fu_616_p3;
wire   [1:0] tmp_31_fu_600_p2;
wire   [1:0] tmp_33_fu_624_p3;
wire   [7:0] tmp_52_fu_654_p4;
wire   [9:0] t_V_2_cast_fu_638_p1;
wire   [9:0] ImagLoc_x_fu_670_p2;
wire   [0:0] tmp_53_fu_676_p3;
wire   [0:0] tmp_9_fu_690_p2;
wire   [0:0] rev3_fu_684_p2;
wire   [0:0] tmp_54_fu_702_p3;
wire   [9:0] p_assign_1_fu_710_p2;
wire  signed [9:0] p_p2_i_i_fu_716_p3;
wire   [9:0] p_assign_2_fu_734_p2;
wire   [9:0] p_assign_3_fu_740_p3;
wire   [0:0] tmp_9_not_fu_752_p2;
wire   [0:0] tmp_11_fu_728_p2;
wire   [0:0] sel_tmp7_fu_758_p2;
wire   [0:0] sel_tmp8_fu_764_p2;
wire  signed [10:0] p_p2_i_i_cast_fu_724_p1;
wire   [10:0] sel_tmp_cast_fu_748_p1;
wire  signed [10:0] x_fu_770_p3;
wire  signed [31:0] col_assign_cast_fu_778_p1;
wire   [0:0] icmp1_fu_664_p2;
wire   [1:0] col_assign_3_t_fu_821_p2;
wire   [7:0] tmp_23_fu_826_p5;
wire   [7:0] tmp_24_fu_845_p5;
wire   [7:0] tmp_25_fu_864_p5;
wire   [7:0] tmp_26_fu_919_p5;
wire   [7:0] tmp_30_fu_937_p5;
wire   [7:0] tmp_34_fu_955_p5;
wire   [8:0] r_V_0_cast_fu_988_p1;
wire  signed [8:0] r_V_s_fu_992_p2;
wire  signed [10:0] grp_fu_1248_p3;
wire  signed [2:0] r_V_10_1_fu_1017_p0;
wire   [7:0] r_V_10_1_fu_1017_p1;
wire  signed [10:0] r_V_10_1_fu_1017_p2;
wire  signed [11:0] tmp_162_1_cast_cast_fu_1022_p1;
wire  signed [11:0] sum_V_0_2_cast_fu_1010_p1;
wire   [3:0] r_V_10_1_2_fu_1043_p0;
wire   [7:0] r_V_10_1_2_fu_1043_p1;
wire   [11:0] r_V_10_1_2_fu_1043_p2;
wire   [7:0] tmp_59_fu_1030_p1;
wire   [7:0] tmp_58_fu_1026_p1;
wire  signed [1:0] r_V_10_2_fu_1062_p0;
wire   [7:0] r_V_10_2_fu_1062_p1;
wire   [9:0] r_V_10_2_fu_1062_p2;
wire   [2:0] r_V_10_2_1_fu_1075_p0;
wire   [7:0] r_V_10_2_1_fu_1075_p1;
wire   [10:0] r_V_10_2_1_fu_1075_p2;
wire   [11:0] sum_V_1_1_fu_1033_p2;
wire   [9:0] tmp_162_2_2_cast_cas_fu_1084_p1;
wire   [9:0] tmp5_fu_1094_p2;
wire  signed [10:0] tmp5_cast_fu_1100_p1;
wire   [10:0] tmp4_fu_1104_p2;
wire   [11:0] tmp3_fu_1088_p2;
wire  signed [11:0] tmp4_cast_fu_1110_p1;
wire   [11:0] p_Val2_s_fu_1114_p2;
wire   [7:0] tmp_38_fu_1052_p2;
wire   [7:0] tmp_60_fu_1048_p1;
wire   [7:0] tmp_62_fu_1080_p1;
wire   [7:0] tmp_61_fu_1067_p1;
wire   [7:0] tmp8_fu_1134_p2;
wire   [7:0] tmp6_fu_1128_p2;
wire   [7:0] tmp7_fu_1140_p2;
wire   [0:0] p_Result_s_fu_1120_p3;
wire   [3:0] tmp_41_fu_1152_p4;
wire   [0:0] not_i_i_fu_1168_p2;
wire   [0:0] tmp_i_i_fu_1162_p2;
wire   [0:0] overflow_fu_1174_p2;
wire   [0:0] tmp_1_i_i_fu_1188_p2;
wire   [7:0] p_mux_i_i_cast_fu_1180_p3;
wire   [7:0] p_Val2_1_fu_1146_p2;
wire  signed [1:0] grp_fu_1241_p0;
wire   [7:0] grp_fu_1241_p1;
wire  signed [1:0] grp_fu_1248_p0;
wire   [7:0] grp_fu_1248_p1;
wire  signed [10:0] grp_fu_1241_p3;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_120;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_enable_operation_146;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op161_store_state4;
reg    ap_enable_operation_161;
reg    ap_predicate_op168_store_state4;
reg    ap_enable_operation_168;
reg    ap_enable_operation_122;
reg    ap_enable_operation_150;
reg    ap_predicate_op159_store_state4;
reg    ap_enable_operation_159;
reg    ap_predicate_op166_store_state4;
reg    ap_enable_operation_166;
reg    ap_enable_operation_124;
reg    ap_enable_operation_153;
reg    ap_predicate_op157_store_state4;
reg    ap_enable_operation_157;
reg    ap_predicate_op165_store_state4;
reg    ap_enable_operation_165;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1241_p10;
wire   [9:0] grp_fu_1248_p10;
wire   [11:0] r_V_10_1_2_fu_1043_p10;
wire   [10:0] r_V_10_1_fu_1017_p10;
wire   [10:0] r_V_10_2_1_fu_1075_p10;
wire   [9:0] r_V_10_2_fu_1062_p10;
reg    ap_condition_933;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U67(
    .din0(right_border_buf_0_s_fu_162),
    .din1(right_border_buf_0_1_fu_166),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_821_p2),
    .dout(tmp_23_fu_826_p5)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U68(
    .din0(right_border_buf_0_3_fu_174),
    .din1(right_border_buf_0_4_fu_178),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_821_p2),
    .dout(tmp_24_fu_845_p5)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U69(
    .din0(right_border_buf_0_5_fu_182),
    .din1(right_border_buf_0_2_fu_170),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_821_p2),
    .dout(tmp_25_fu_864_p5)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U70(
    .din0(col_buf_0_val_0_0_fu_838_p3),
    .din1(col_buf_0_val_1_0_fu_857_p3),
    .din2(col_buf_0_val_2_0_fu_876_p3),
    .din3(row_assign_10_0_t_reg_1401),
    .dout(tmp_26_fu_919_p5)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U71(
    .din0(col_buf_0_val_0_0_fu_838_p3),
    .din1(col_buf_0_val_1_0_fu_857_p3),
    .din2(col_buf_0_val_2_0_fu_876_p3),
    .din3(row_assign_10_1_t_reg_1406),
    .dout(tmp_30_fu_937_p5)
);

TOP_fuct_mux_32_8hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
TOP_fuct_mux_32_8hbi_U72(
    .din0(col_buf_0_val_0_0_fu_838_p3),
    .din1(col_buf_0_val_1_0_fu_857_p3),
    .din2(col_buf_0_val_2_0_fu_876_p3),
    .din3(row_assign_10_2_t_reg_1411),
    .dout(tmp_34_fu_955_p5)
);

TOP_fuct_mac_mulaibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
TOP_fuct_mac_mulaibs_U73(
    .din0(grp_fu_1241_p0),
    .din1(grp_fu_1241_p1),
    .din2(r_V_s_fu_992_p2),
    .dout(grp_fu_1241_p3)
);

TOP_fuct_mac_mulajbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
TOP_fuct_mac_mulajbC_U74(
    .din0(grp_fu_1248_p0),
    .din1(grp_fu_1248_p1),
    .din2(grp_fu_1241_p3),
    .dout(grp_fu_1248_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond460_i_fu_642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond461_i_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond461_i_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter1_state4) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((exitcond461_i_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_311 <= j_V_fu_648_p2;
    end else if (((exitcond461_i_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_311 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        t_V_reg_300 <= i_V_reg_1367;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_300 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_fu_642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1434 <= brmerge_fu_786_p2;
        k_buf_0_val_3_addr_reg_1441 <= tmp_22_fu_791_p1;
        k_buf_0_val_4_addr_reg_1447 <= tmp_22_fu_791_p1;
        k_buf_0_val_5_addr_reg_1453 <= tmp_22_fu_791_p1;
        or_cond_i_i_reg_1425 <= or_cond_i_i_fu_696_p2;
        or_cond_i_reg_1459 <= or_cond_i_fu_798_p2;
        tmp_55_reg_1429 <= tmp_55_fu_782_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond460_i_reg_1416 <= exitcond460_i_fu_642_p2;
        or_cond_i_reg_1459_pp0_iter1_reg <= or_cond_i_reg_1459;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1367 <= i_V_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond461_i_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1381 <= icmp_fu_384_p2;
        row_assign_10_0_t_reg_1401 <= row_assign_10_0_t_fu_556_p2;
        row_assign_10_1_t_reg_1406 <= row_assign_10_1_t_fu_594_p2;
        row_assign_10_2_t_reg_1411 <= row_assign_10_2_t_fu_632_p2;
        tmp_120_1_reg_1390 <= tmp_120_1_fu_396_p2;
        tmp_12_reg_1394 <= tmp_12_fu_402_p2;
        tmp_1_reg_1386 <= tmp_1_fu_390_p2;
        tmp_2_reg_1372 <= tmp_2_fu_362_p2;
        tmp_76_0_not_reg_1376 <= tmp_76_0_not_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_i_reg_1459 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_9_reg_1463 <= p_Val2_9_fu_1194_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_166 <= right_border_buf_0_s_fu_162;
        right_border_buf_0_2_fu_170 <= right_border_buf_0_5_fu_182;
        right_border_buf_0_3_fu_174 <= col_buf_0_val_1_0_fu_857_p3;
        right_border_buf_0_4_fu_178 <= right_border_buf_0_3_fu_174;
        right_border_buf_0_5_fu_182 <= col_buf_0_val_2_0_fu_876_p3;
        right_border_buf_0_s_fu_162 <= col_buf_0_val_0_0_fu_838_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_142 <= src_kernel_win_0_va_fu_138;
        src_kernel_win_0_va_2_fu_146 <= src_kernel_win_0_va_7_fu_948_p3;
        src_kernel_win_0_va_3_fu_150 <= src_kernel_win_0_va_2_fu_146;
        src_kernel_win_0_va_4_fu_154 <= src_kernel_win_0_va_8_fu_966_p3;
        src_kernel_win_0_va_5_fu_158 <= src_kernel_win_0_va_4_fu_154;
        src_kernel_win_0_va_fu_138 <= src_kernel_win_0_va_6_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_161_0_1_cast_reg_1333 <= tmp_161_0_1_cast_fu_322_p1;
        tmp_161_0_2_cast_reg_1338 <= tmp_161_0_2_cast_fu_326_p1;
        tmp_161_1_2_cast_reg_1348[3 : 0] <= tmp_161_1_2_cast_fu_334_p1[3 : 0];
        tmp_161_1_cast_reg_1343 <= tmp_161_1_cast_fu_330_p1;
        tmp_161_2_1_cast_reg_1358[2 : 0] <= tmp_161_2_1_cast_fu_342_p1[2 : 0];
        tmp_161_2_cast_reg_1353 <= tmp_161_2_cast_fu_338_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond461_i_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond461_i_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_120_1_reg_1390 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_933)) begin
        if (((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((tmp_120_1_reg_1390 == 1'd1) & (icmp_reg_1381 == 1'd0))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_120_1_reg_1390 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_933)) begin
        if (((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((tmp_1_reg_1386 == 1'd1) & (icmp_reg_1381 == 1'd0))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op167_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op156_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond461_i_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_670_p2 = ($signed(10'd1023) + $signed(t_V_2_cast_fu_638_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op167_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op156_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((or_cond_i_reg_1459_pp0_iter1_reg == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_933 = ((or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_120 = (exitcond460_i_fu_642_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_122 = (exitcond460_i_fu_642_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_124 = (exitcond460_i_fu_642_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_146 = (exitcond460_i_reg_1416 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (exitcond460_i_reg_1416 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (exitcond460_i_reg_1416 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_157 = (ap_predicate_op157_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_161 = (ap_predicate_op161_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_165 = (ap_predicate_op165_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_store_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op156_read_state4 = ((or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_store_state4 = ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_store_state4 = ((tmp_120_1_reg_1390 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_store_state4 = ((tmp_1_reg_1386 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (icmp_reg_1381 == 1'd0) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_store_state4 = ((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_store_state4 = ((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_read_state4 = ((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_store_state4 = ((tmp_2_reg_1372 == 1'd1) & (icmp_reg_1381 == 1'd1) & (or_cond_i_i_reg_1425 == 1'd1) & (exitcond460_i_reg_1416 == 1'd0));
end

assign brmerge_fu_786_p2 = (tmp_9_fu_690_p2 | tmp_76_0_not_reg_1376);

assign col_assign_3_t_fu_821_p2 = (2'd1 - tmp_55_reg_1429);

assign col_assign_cast_fu_778_p1 = x_fu_770_p3;

assign col_buf_0_val_0_0_fu_838_p3 = ((brmerge_reg_1434[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_23_fu_826_p5);

assign col_buf_0_val_1_0_fu_857_p3 = ((brmerge_reg_1434[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_24_fu_845_p5);

assign col_buf_0_val_2_0_fu_876_p3 = ((brmerge_reg_1434[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_25_fu_864_p5);

assign exitcond460_i_fu_642_p2 = ((t_V_2_reg_311 == 9'd292) ? 1'b1 : 1'b0);

assign exitcond461_i_fu_350_p2 = ((t_V_reg_300 == 8'd182) ? 1'b1 : 1'b0);

assign grp_fu_1241_p0 = tmp_161_0_1_cast_reg_1333;

assign grp_fu_1241_p1 = grp_fu_1241_p10;

assign grp_fu_1241_p10 = src_kernel_win_0_va_4_fu_154;

assign grp_fu_1248_p0 = tmp_161_0_2_cast_reg_1338;

assign grp_fu_1248_p1 = grp_fu_1248_p10;

assign grp_fu_1248_p10 = src_kernel_win_0_va_8_fu_966_p3;

assign i_V_fu_356_p2 = (t_V_reg_300 + 8'd1);

assign icmp1_fu_664_p2 = ((tmp_52_fu_654_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_384_p2 = ((tmp_28_fu_374_p4 != 7'd0) ? 1'b1 : 1'b0);

assign j_V_fu_648_p2 = (t_V_2_reg_311 + 9'd1);

assign k_buf_0_val_3_address0 = tmp_22_fu_791_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_1441;

assign k_buf_0_val_4_address0 = tmp_22_fu_791_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1447;

assign k_buf_0_val_5_address0 = tmp_22_fu_791_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1453;

assign not_i_i_fu_1168_p2 = ((tmp_41_fu_1152_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i496_i_fu_444_p2 = (tmp_16_fu_438_p2 & rev_fu_432_p2);

assign or_cond_i_fu_798_p2 = (icmp_reg_1381 & icmp1_fu_664_p2);

assign or_cond_i_i_fu_696_p2 = (tmp_9_fu_690_p2 & rev3_fu_684_p2);

assign overflow_fu_1174_p2 = (tmp_i_i_fu_1162_p2 & not_i_i_fu_1168_p2);

assign p_Result_s_fu_1120_p3 = p_Val2_s_fu_1114_p2[32'd11];

assign p_Val2_1_fu_1146_p2 = (tmp6_fu_1128_p2 + tmp7_fu_1140_p2);

assign p_Val2_9_fu_1194_p3 = ((tmp_1_i_i_fu_1188_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1180_p3 : p_Val2_1_fu_1146_p2);

assign p_Val2_s_fu_1114_p2 = ($signed(tmp3_fu_1088_p2) + $signed(tmp4_cast_fu_1110_p1));

assign p_assign_1_fu_710_p2 = (10'd1 - t_V_2_cast_fu_638_p1);

assign p_assign_2_fu_734_p2 = ($signed(10'd578) - $signed(p_p2_i_i_fu_716_p3));

assign p_assign_3_fu_740_p3 = ((or_cond_i_i_fu_696_p2[0:0] === 1'b1) ? ImagLoc_x_fu_670_p2 : p_assign_2_fu_734_p2);

assign p_assign_6_1_fu_488_p2 = ($signed(9'd510) + $signed(t_V_cast_fu_346_p1));

assign p_assign_6_2_fu_514_p2 = ($signed(9'd509) + $signed(t_V_cast_fu_346_p1));

assign p_assign_7_fu_458_p2 = (9'd1 - t_V_cast_fu_346_p1);

assign p_assign_8_fu_482_p2 = ($signed(2'd2) - $signed(tmp_37_fu_472_p1));

assign p_dst_data_stream_V_din = p_Val2_9_reg_1463;

assign p_mux_i_i_cast_fu_1180_p3 = ((tmp_i_i_fu_1162_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i497_i_fu_464_p3 = ((tmp_36_fu_450_p3[0:0] === 1'b1) ? p_assign_7_fu_458_p2 : tmp_14_fu_412_p2);

assign p_p2_i497_i_p_assign_8_fu_540_p3 = ((tmp_18_fu_476_p2[0:0] === 1'b1) ? tmp_37_fu_472_p1 : p_assign_8_fu_482_p2);

assign p_p2_i_i_cast_fu_724_p1 = p_p2_i_i_fu_716_p3;

assign p_p2_i_i_fu_716_p3 = ((tmp_54_fu_702_p3[0:0] === 1'b1) ? p_assign_1_fu_710_p2 : ImagLoc_x_fu_670_p2);

assign r_V_0_cast_fu_988_p1 = src_kernel_win_0_va_5_fu_158;

assign r_V_10_1_2_fu_1043_p0 = tmp_161_1_2_cast_reg_1348;

assign r_V_10_1_2_fu_1043_p1 = r_V_10_1_2_fu_1043_p10;

assign r_V_10_1_2_fu_1043_p10 = src_kernel_win_0_va_7_fu_948_p3;

assign r_V_10_1_2_fu_1043_p2 = (r_V_10_1_2_fu_1043_p0 * r_V_10_1_2_fu_1043_p1);

assign r_V_10_1_fu_1017_p0 = tmp_161_1_cast_reg_1343;

assign r_V_10_1_fu_1017_p1 = r_V_10_1_fu_1017_p10;

assign r_V_10_1_fu_1017_p10 = src_kernel_win_0_va_3_fu_150;

assign r_V_10_1_fu_1017_p2 = ($signed(r_V_10_1_fu_1017_p0) * $signed({{1'b0}, {r_V_10_1_fu_1017_p1}}));

assign r_V_10_2_1_fu_1075_p0 = tmp_161_2_1_cast_reg_1358;

assign r_V_10_2_1_fu_1075_p1 = r_V_10_2_1_fu_1075_p10;

assign r_V_10_2_1_fu_1075_p10 = src_kernel_win_0_va_fu_138;

assign r_V_10_2_1_fu_1075_p2 = (r_V_10_2_1_fu_1075_p0 * r_V_10_2_1_fu_1075_p1);

assign r_V_10_2_fu_1062_p0 = tmp_161_2_cast_reg_1353;

assign r_V_10_2_fu_1062_p1 = r_V_10_2_fu_1062_p10;

assign r_V_10_2_fu_1062_p10 = src_kernel_win_0_va_1_fu_142;

assign r_V_10_2_fu_1062_p2 = ($signed(r_V_10_2_fu_1062_p0) * $signed({{1'b0}, {r_V_10_2_fu_1062_p1}}));

assign r_V_s_fu_992_p2 = (9'd0 - r_V_0_cast_fu_988_p1);

assign rev3_fu_684_p2 = (tmp_53_fu_676_p3 ^ 1'd1);

assign rev_fu_432_p2 = (tmp_35_fu_424_p3 ^ 1'd1);

assign row_assign_10_0_t_fu_556_p2 = (y_fu_548_p3 ^ 2'd3);

assign row_assign_10_1_t_fu_594_p2 = (tmp_29_fu_586_p3 ^ 2'd3);

assign row_assign_10_2_t_fu_632_p2 = (tmp_33_fu_624_p3 ^ 2'd3);

assign sel_tmp7_fu_758_p2 = (tmp_9_not_fu_752_p2 | tmp_53_fu_676_p3);

assign sel_tmp8_fu_764_p2 = (tmp_11_fu_728_p2 & sel_tmp7_fu_758_p2);

assign sel_tmp_cast_fu_748_p1 = p_assign_3_fu_740_p3;

assign src_kernel_win_0_va_6_fu_930_p3 = ((tmp_12_reg_1394[0:0] === 1'b1) ? tmp_26_fu_919_p5 : col_buf_0_val_0_0_fu_838_p3);

assign src_kernel_win_0_va_7_fu_948_p3 = ((tmp_12_reg_1394[0:0] === 1'b1) ? tmp_30_fu_937_p5 : col_buf_0_val_1_0_fu_857_p3);

assign src_kernel_win_0_va_8_fu_966_p3 = ((tmp_12_reg_1394[0:0] === 1'b1) ? tmp_34_fu_955_p5 : col_buf_0_val_2_0_fu_876_p3);

assign sum_V_0_2_cast_fu_1010_p1 = grp_fu_1248_p3;

assign sum_V_1_1_fu_1033_p2 = ($signed(tmp_162_1_cast_cast_fu_1022_p1) + $signed(sum_V_0_2_cast_fu_1010_p1));

assign t_V_2_cast_fu_638_p1 = t_V_2_reg_311;

assign t_V_cast_fu_346_p1 = t_V_reg_300;

assign tmp3_fu_1088_p2 = (r_V_10_1_2_fu_1043_p2 + sum_V_1_1_fu_1033_p2);

assign tmp4_cast_fu_1110_p1 = $signed(tmp4_fu_1104_p2);

assign tmp4_fu_1104_p2 = ($signed(r_V_10_2_1_fu_1075_p2) + $signed(tmp5_cast_fu_1100_p1));

assign tmp5_cast_fu_1100_p1 = $signed(tmp5_fu_1094_p2);

assign tmp5_fu_1094_p2 = (tmp_162_2_2_cast_cas_fu_1084_p1 + r_V_10_2_fu_1062_p2);

assign tmp6_fu_1128_p2 = (tmp_38_fu_1052_p2 + tmp_60_fu_1048_p1);

assign tmp7_fu_1140_p2 = (tmp_61_fu_1067_p1 + tmp8_fu_1134_p2);

assign tmp8_fu_1134_p2 = (src_kernel_win_0_va_6_fu_930_p3 + tmp_62_fu_1080_p1);

assign tmp_11_fu_728_p2 = (($signed(p_p2_i_i_fu_716_p3) < $signed(10'd290)) ? 1'b1 : 1'b0);

assign tmp_120_1_fu_396_p2 = ((t_V_reg_300 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_12_fu_402_p2 = ((t_V_reg_300 > 8'd180) ? 1'b1 : 1'b0);

assign tmp_14_fu_412_p2 = ($signed(9'd511) + $signed(t_V_cast_fu_346_p1));

assign tmp_161_0_1_cast_fu_322_p1 = $signed(p_kernel_val_0_V_1_read);

assign tmp_161_0_2_cast_fu_326_p1 = $signed(p_kernel_val_0_V_2_read);

assign tmp_161_1_2_cast_fu_334_p1 = p_kernel_val_1_V_2_read;

assign tmp_161_1_cast_fu_330_p1 = $signed(p_kernel_val_1_V_0_read);

assign tmp_161_2_1_cast_fu_342_p1 = p_kernel_val_2_V_1_read;

assign tmp_161_2_cast_fu_338_p1 = $signed(p_kernel_val_2_V_0_read);

assign tmp_162_1_cast_cast_fu_1022_p1 = r_V_10_1_fu_1017_p2;

assign tmp_162_2_2_cast_cas_fu_1084_p1 = src_kernel_win_0_va_6_fu_930_p3;

assign tmp_16_fu_438_p2 = (($signed(tmp_14_fu_412_p2) < $signed(9'd180)) ? 1'b1 : 1'b0);

assign tmp_18_fu_476_p2 = (($signed(p_p2_i497_i_fu_464_p3) < $signed(9'd180)) ? 1'b1 : 1'b0);

assign tmp_1_fu_390_p2 = ((t_V_reg_300 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_1_i_i_fu_1188_p2 = (p_Result_s_fu_1120_p3 | overflow_fu_1174_p2);

assign tmp_22_fu_791_p1 = $unsigned(col_assign_cast_fu_778_p1);

assign tmp_27_fu_562_p2 = (tmp_32_fu_408_p1 ^ 2'd2);

assign tmp_28_fu_374_p4 = {{t_V_reg_300[7:1]}};

assign tmp_29_fu_586_p3 = ((tmp_39_fu_494_p3[0:0] === 1'b1) ? tmp_44_fu_578_p3 : tmp_27_fu_562_p2);

assign tmp_2_fu_362_p2 = ((t_V_reg_300 < 8'd180) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_418_p2 = ($signed(2'd3) + $signed(tmp_32_fu_408_p1));

assign tmp_31_fu_600_p2 = (2'd1 + tmp_32_fu_408_p1);

assign tmp_32_fu_408_p1 = t_V_reg_300[1:0];

assign tmp_33_fu_624_p3 = ((tmp_43_fu_520_p3[0:0] === 1'b1) ? tmp_47_fu_616_p3 : tmp_31_fu_600_p2);

assign tmp_35_fu_424_p3 = tmp_14_fu_412_p2[32'd8];

assign tmp_36_fu_450_p3 = tmp_14_fu_412_p2[32'd8];

assign tmp_37_fu_472_p1 = p_p2_i497_i_fu_464_p3[1:0];

assign tmp_38_fu_1052_p2 = (tmp_59_fu_1030_p1 + tmp_58_fu_1026_p1);

assign tmp_39_fu_494_p3 = p_assign_6_1_fu_488_p2[32'd8];

assign tmp_40_fu_502_p3 = p_assign_6_1_fu_488_p2[32'd8];

assign tmp_41_fu_1152_p4 = {{p_Val2_s_fu_1114_p2[11:8]}};

assign tmp_42_fu_510_p1 = t_V_reg_300[1:0];

assign tmp_43_fu_520_p3 = p_assign_6_2_fu_514_p2[32'd8];

assign tmp_44_fu_578_p3 = ((tmp_40_fu_502_p3[0:0] === 1'b1) ? tmp_48_fu_568_p2 : tmp_49_fu_574_p1);

assign tmp_45_fu_528_p3 = p_assign_6_2_fu_514_p2[32'd8];

assign tmp_46_fu_536_p1 = t_V_reg_300[1:0];

assign tmp_47_fu_616_p3 = ((tmp_45_fu_528_p3[0:0] === 1'b1) ? tmp_50_fu_606_p2 : tmp_51_fu_612_p1);

assign tmp_48_fu_568_p2 = ($signed(2'd2) - $signed(tmp_42_fu_510_p1));

assign tmp_49_fu_574_p1 = p_assign_6_1_fu_488_p2[1:0];

assign tmp_50_fu_606_p2 = (tmp_46_fu_536_p1 ^ 2'd3);

assign tmp_51_fu_612_p1 = p_assign_6_2_fu_514_p2[1:0];

assign tmp_52_fu_654_p4 = {{t_V_2_reg_311[8:1]}};

assign tmp_53_fu_676_p3 = ImagLoc_x_fu_670_p2[32'd9];

assign tmp_54_fu_702_p3 = ImagLoc_x_fu_670_p2[32'd9];

assign tmp_55_fu_782_p1 = x_fu_770_p3[1:0];

assign tmp_58_fu_1026_p1 = r_V_10_1_fu_1017_p2[7:0];

assign tmp_59_fu_1030_p1 = grp_fu_1248_p3[7:0];

assign tmp_60_fu_1048_p1 = r_V_10_1_2_fu_1043_p2[7:0];

assign tmp_61_fu_1067_p1 = r_V_10_2_fu_1062_p2[7:0];

assign tmp_62_fu_1080_p1 = r_V_10_2_1_fu_1075_p2[7:0];

assign tmp_76_0_not_fu_368_p2 = (tmp_2_fu_362_p2 ^ 1'd1);

assign tmp_9_fu_690_p2 = (($signed(ImagLoc_x_fu_670_p2) < $signed(10'd290)) ? 1'b1 : 1'b0);

assign tmp_9_not_fu_752_p2 = (tmp_9_fu_690_p2 ^ 1'd1);

assign tmp_i_i_fu_1162_p2 = (p_Result_s_fu_1120_p3 ^ 1'd1);

assign x_fu_770_p3 = ((sel_tmp8_fu_764_p2[0:0] === 1'b1) ? p_p2_i_i_cast_fu_724_p1 : sel_tmp_cast_fu_748_p1);

assign y_fu_548_p3 = ((or_cond_i496_i_fu_444_p2[0:0] === 1'b1) ? tmp_30_cast_fu_418_p2 : p_p2_i497_i_p_assign_8_fu_540_p3);

always @ (posedge ap_clk) begin
    tmp_161_1_2_cast_reg_1348[11:4] <= 8'b00000000;
    tmp_161_2_1_cast_reg_1358[10:3] <= 8'b00000000;
end

endmodule //Filter2D
