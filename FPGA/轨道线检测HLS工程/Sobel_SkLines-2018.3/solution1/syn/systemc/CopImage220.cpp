// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "CopImage220.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic CopImage220::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic CopImage220::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> CopImage220::ap_ST_fsm_state1 = "1";
const sc_lv<3> CopImage220::ap_ST_fsm_state2 = "10";
const sc_lv<3> CopImage220::ap_ST_fsm_state3 = "100";
const sc_lv<32> CopImage220::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool CopImage220::ap_const_boolean_1 = true;
const sc_lv<32> CopImage220::ap_const_lv32_2 = "10";
const sc_lv<1> CopImage220::ap_const_lv1_1 = "1";
const sc_lv<32> CopImage220::ap_const_lv32_1 = "1";
const sc_lv<31> CopImage220::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> CopImage220::ap_const_lv1_0 = "0";
const sc_lv<31> CopImage220::ap_const_lv31_1 = "1";
const sc_lv<31> CopImage220::ap_const_lv31_D7 = "11010111";
const sc_lv<31> CopImage220::ap_const_lv31_18C = "110001100";
const sc_lv<31> CopImage220::ap_const_lv31_123 = "100100011";

CopImage220::CopImage220(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_HEIGHT_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( HEIGHT_empty_n );

    SC_METHOD(thread_HEIGHT_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( HEIGHT_empty_n );
    sensitive << ( WIDTH_empty_n );

    SC_METHOD(thread_WIDTH_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( WIDTH_empty_n );

    SC_METHOD(thread_WIDTH_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( HEIGHT_empty_n );
    sensitive << ( WIDTH_empty_n );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( HEIGHT_empty_n );
    sensitive << ( WIDTH_empty_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_100_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op37_write_state3);
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( tmp_121_i_fu_162_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_100_p2 );

    SC_METHOD(thread_dst_data_stream_V_blk_n);
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( tmp_121_i_fu_162_p2 );

    SC_METHOD(thread_dst_data_stream_V_din);
    sensitive << ( src_data_stream_V_dout );
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_dst_data_stream_V_write);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_i_cast_i_fu_96_p1);
    sensitive << ( i_i_reg_74 );

    SC_METHOD(thread_i_fu_105_p2);
    sensitive << ( i_i_reg_74 );

    SC_METHOD(thread_j_cast_i_fu_129_p1);
    sensitive << ( j_i_reg_85 );

    SC_METHOD(thread_j_fu_138_p2);
    sensitive << ( j_i_reg_85 );

    SC_METHOD(thread_src_data_stream_V_blk_n);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );

    SC_METHOD(thread_src_data_stream_V_read);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );

    SC_METHOD(thread_tmp1_fu_123_p2);
    sensitive << ( tmp_115_i_fu_111_p2 );
    sensitive << ( tmp_116_i_fu_117_p2 );

    SC_METHOD(thread_tmp2_fu_156_p2);
    sensitive << ( tmp_119_i_fu_150_p2 );
    sensitive << ( tmp_118_i_fu_144_p2 );

    SC_METHOD(thread_tmp_115_i_fu_111_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_100_p2 );
    sensitive << ( i_i_reg_74 );

    SC_METHOD(thread_tmp_116_i_fu_117_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_100_p2 );
    sensitive << ( i_i_reg_74 );

    SC_METHOD(thread_tmp_118_i_fu_144_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );
    sensitive << ( j_i_reg_85 );

    SC_METHOD(thread_tmp_119_i_fu_150_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );
    sensitive << ( j_i_reg_85 );

    SC_METHOD(thread_tmp_121_i_fu_162_p2);
    sensitive << ( tmp1_reg_185 );
    sensitive << ( tmp2_fu_156_p2 );

    SC_METHOD(thread_tmp_i_160_fu_133_p2);
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( WIDTH_read_reg_172 );
    sensitive << ( ap_predicate_op37_write_state3 );
    sensitive << ( j_cast_i_fu_129_p1 );

    SC_METHOD(thread_tmp_i_fu_100_p2);
    sensitive << ( HEIGHT_read_reg_167 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_cast_i_fu_96_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( src_data_stream_V_empty_n );
    sensitive << ( dst_data_stream_V_full_n );
    sensitive << ( HEIGHT_empty_n );
    sensitive << ( WIDTH_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_i_160_fu_133_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_100_p2 );
    sensitive << ( ap_predicate_op37_write_state3 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "CopImage220_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_data_stream_V_dout, "(port)src_data_stream_V_dout");
    sc_trace(mVcdFile, src_data_stream_V_empty_n, "(port)src_data_stream_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_V_read, "(port)src_data_stream_V_read");
    sc_trace(mVcdFile, dst_data_stream_V_din, "(port)dst_data_stream_V_din");
    sc_trace(mVcdFile, dst_data_stream_V_full_n, "(port)dst_data_stream_V_full_n");
    sc_trace(mVcdFile, dst_data_stream_V_write, "(port)dst_data_stream_V_write");
    sc_trace(mVcdFile, HEIGHT_dout, "(port)HEIGHT_dout");
    sc_trace(mVcdFile, HEIGHT_empty_n, "(port)HEIGHT_empty_n");
    sc_trace(mVcdFile, HEIGHT_read, "(port)HEIGHT_read");
    sc_trace(mVcdFile, WIDTH_dout, "(port)WIDTH_dout");
    sc_trace(mVcdFile, WIDTH_empty_n, "(port)WIDTH_empty_n");
    sc_trace(mVcdFile, WIDTH_read, "(port)WIDTH_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, src_data_stream_V_blk_n, "src_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_i_160_fu_133_p2, "tmp_i_160_fu_133_p2");
    sc_trace(mVcdFile, dst_data_stream_V_blk_n, "dst_data_stream_V_blk_n");
    sc_trace(mVcdFile, tmp_121_i_fu_162_p2, "tmp_121_i_fu_162_p2");
    sc_trace(mVcdFile, HEIGHT_blk_n, "HEIGHT_blk_n");
    sc_trace(mVcdFile, WIDTH_blk_n, "WIDTH_blk_n");
    sc_trace(mVcdFile, HEIGHT_read_reg_167, "HEIGHT_read_reg_167");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, WIDTH_read_reg_172, "WIDTH_read_reg_172");
    sc_trace(mVcdFile, i_fu_105_p2, "i_fu_105_p2");
    sc_trace(mVcdFile, i_reg_180, "i_reg_180");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp1_fu_123_p2, "tmp1_fu_123_p2");
    sc_trace(mVcdFile, tmp1_reg_185, "tmp1_reg_185");
    sc_trace(mVcdFile, tmp_i_fu_100_p2, "tmp_i_fu_100_p2");
    sc_trace(mVcdFile, j_fu_138_p2, "j_fu_138_p2");
    sc_trace(mVcdFile, ap_predicate_op37_write_state3, "ap_predicate_op37_write_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, i_i_reg_74, "i_i_reg_74");
    sc_trace(mVcdFile, j_i_reg_85, "j_i_reg_85");
    sc_trace(mVcdFile, i_cast_i_fu_96_p1, "i_cast_i_fu_96_p1");
    sc_trace(mVcdFile, tmp_115_i_fu_111_p2, "tmp_115_i_fu_111_p2");
    sc_trace(mVcdFile, tmp_116_i_fu_117_p2, "tmp_116_i_fu_117_p2");
    sc_trace(mVcdFile, j_cast_i_fu_129_p1, "j_cast_i_fu_129_p1");
    sc_trace(mVcdFile, tmp_119_i_fu_150_p2, "tmp_119_i_fu_150_p2");
    sc_trace(mVcdFile, tmp_118_i_fu_144_p2, "tmp_118_i_fu_144_p2");
    sc_trace(mVcdFile, tmp2_fu_156_p2, "tmp2_fu_156_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

CopImage220::~CopImage220() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void CopImage220::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(tmp_i_fu_100_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))) && 
         esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_0))) {
        i_i_reg_74 = i_reg_180.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read())))) {
        i_i_reg_74 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_100_p2.read()))) {
        j_i_reg_85 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
                !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))))) {
        j_i_reg_85 = j_fu_138_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read())))) {
        HEIGHT_read_reg_167 = HEIGHT_dout.read();
        WIDTH_read_reg_172 = WIDTH_dout.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_180 = i_fu_105_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_100_p2.read()))) {
        tmp1_reg_185 = tmp1_fu_123_p2.read();
    }
}

void CopImage220::thread_HEIGHT_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        HEIGHT_blk_n = HEIGHT_empty_n.read();
    } else {
        HEIGHT_blk_n = ap_const_logic_1;
    }
}

void CopImage220::thread_HEIGHT_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read())))) {
        HEIGHT_read = ap_const_logic_1;
    } else {
        HEIGHT_read = ap_const_logic_0;
    }
}

void CopImage220::thread_WIDTH_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        WIDTH_blk_n = WIDTH_empty_n.read();
    } else {
        WIDTH_blk_n = ap_const_logic_1;
    }
}

void CopImage220::thread_WIDTH_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read())))) {
        WIDTH_read = ap_const_logic_1;
    } else {
        WIDTH_read = ap_const_logic_0;
    }
}

void CopImage220::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void CopImage220::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void CopImage220::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void CopImage220::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read()));
}

void CopImage220::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read())));
}

void CopImage220::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_100_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void CopImage220::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void CopImage220::thread_ap_predicate_op37_write_state3() {
    ap_predicate_op37_write_state3 = (esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_121_i_fu_162_p2.read()));
}

void CopImage220::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_i_fu_100_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void CopImage220::thread_dst_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_121_i_fu_162_p2.read()))) {
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n.read();
    } else {
        dst_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void CopImage220::thread_dst_data_stream_V_din() {
    dst_data_stream_V_din = src_data_stream_V_dout.read();
}

void CopImage220::thread_dst_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()) && 
         !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))))) {
        dst_data_stream_V_write = ap_const_logic_1;
    } else {
        dst_data_stream_V_write = ap_const_logic_0;
    }
}

void CopImage220::thread_i_cast_i_fu_96_p1() {
    i_cast_i_fu_96_p1 = esl_zext<32,31>(i_i_reg_74.read());
}

void CopImage220::thread_i_fu_105_p2() {
    i_fu_105_p2 = (!i_i_reg_74.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_i_reg_74.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void CopImage220::thread_j_cast_i_fu_129_p1() {
    j_cast_i_fu_129_p1 = esl_zext<32,31>(j_i_reg_85.read());
}

void CopImage220::thread_j_fu_138_p2() {
    j_fu_138_p2 = (!j_i_reg_85.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j_i_reg_85.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void CopImage220::thread_src_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1))) {
        src_data_stream_V_blk_n = src_data_stream_V_empty_n.read();
    } else {
        src_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void CopImage220::thread_src_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
         !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))))) {
        src_data_stream_V_read = ap_const_logic_1;
    } else {
        src_data_stream_V_read = ap_const_logic_0;
    }
}

void CopImage220::thread_tmp1_fu_123_p2() {
    tmp1_fu_123_p2 = (tmp_115_i_fu_111_p2.read() & tmp_116_i_fu_117_p2.read());
}

void CopImage220::thread_tmp2_fu_156_p2() {
    tmp2_fu_156_p2 = (tmp_119_i_fu_150_p2.read() & tmp_118_i_fu_144_p2.read());
}

void CopImage220::thread_tmp_115_i_fu_111_p2() {
    tmp_115_i_fu_111_p2 = (!i_i_reg_74.read().is_01() || !ap_const_lv31_D7.is_01())? sc_lv<1>(): (sc_biguint<31>(i_i_reg_74.read()) > sc_biguint<31>(ap_const_lv31_D7));
}

void CopImage220::thread_tmp_116_i_fu_117_p2() {
    tmp_116_i_fu_117_p2 = (!i_i_reg_74.read().is_01() || !ap_const_lv31_18C.is_01())? sc_lv<1>(): (sc_biguint<31>(i_i_reg_74.read()) < sc_biguint<31>(ap_const_lv31_18C));
}

void CopImage220::thread_tmp_118_i_fu_144_p2() {
    tmp_118_i_fu_144_p2 = (!j_i_reg_85.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_85.read() != ap_const_lv31_0);
}

void CopImage220::thread_tmp_119_i_fu_150_p2() {
    tmp_119_i_fu_150_p2 = (!j_i_reg_85.read().is_01() || !ap_const_lv31_123.is_01())? sc_lv<1>(): (sc_biguint<31>(j_i_reg_85.read()) < sc_biguint<31>(ap_const_lv31_123));
}

void CopImage220::thread_tmp_121_i_fu_162_p2() {
    tmp_121_i_fu_162_p2 = (tmp2_fu_156_p2.read() & tmp1_reg_185.read());
}

void CopImage220::thread_tmp_i_160_fu_133_p2() {
    tmp_i_160_fu_133_p2 = (!j_cast_i_fu_129_p1.read().is_01() || !WIDTH_read_reg_172.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_cast_i_fu_129_p1.read()) < sc_bigint<32>(WIDTH_read_reg_172.read()));
}

void CopImage220::thread_tmp_i_fu_100_p2() {
    tmp_i_fu_100_p2 = (!i_cast_i_fu_96_p1.read().is_01() || !HEIGHT_read_reg_167.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_i_fu_96_p1.read()) < sc_bigint<32>(HEIGHT_read_reg_167.read()));
}

void CopImage220::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, HEIGHT_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, WIDTH_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_i_fu_100_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))) && esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && !((esl_seteq<1,1,1>(tmp_i_160_fu_133_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, src_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, dst_data_stream_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op37_write_state3.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

