// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filtrel_kernelXS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_data_stream_V_dout,
        src_data_stream_V_empty_n,
        src_data_stream_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_data_stream_V_dout;
input   src_data_stream_V_empty_n;
output   src_data_stream_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_V_read;
reg[7:0] dst_data_stream_V_din;
reg dst_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_data_stream_V_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond7_fu_376_p2;
reg    dst_data_stream_V_blk_n;
wire    ap_CS_fsm_state11;
wire   [0:0] Line_Flag2_q0;
wire   [2:0] count_1_fu_352_p2;
reg   [2:0] count_1_reg_603;
wire    ap_CS_fsm_state2;
wire   [12:0] next_mul_fu_358_p2;
reg   [12:0] next_mul_reg_608;
wire    ap_CS_fsm_state3;
wire   [4:0] yi_1_fu_370_p2;
reg   [4:0] yi_1_reg_616;
wire   [8:0] xi_1_fu_382_p2;
reg    ap_block_state4;
wire   [3:0] i_1_fu_409_p2;
reg   [3:0] i_1_reg_632;
wire    ap_CS_fsm_state5;
reg   [3:0] Line_Flag2_addr_reg_637;
wire   [0:0] exitcond6_fu_403_p2;
wire   [9:0] tmp_3_fu_444_p2;
reg   [9:0] tmp_3_reg_642;
wire   [31:0] j_1_fu_468_p2;
reg   [31:0] j_1_reg_650;
wire    ap_CS_fsm_state6;
wire  signed [13:0] tmp_7_fu_594_p2;
reg  signed [13:0] tmp_7_reg_655;
wire   [0:0] or_cond7_fu_462_p2;
wire   [0:0] tmp_s_fu_478_p2;
reg   [0:0] tmp_s_reg_660;
wire   [0:0] tmp_8_fu_488_p2;
reg   [0:0] tmp_8_reg_665;
wire    ap_CS_fsm_state7;
wire   [4:0] k_1_fu_494_p2;
reg   [4:0] k_1_reg_669;
wire   [4:0] yi_2_fu_555_p2;
reg   [4:0] yi_2_reg_691;
wire    ap_CS_fsm_state9;
wire   [8:0] xi_2_fu_567_p2;
reg   [8:0] xi_2_reg_699;
wire    ap_CS_fsm_state10;
wire   [17:0] next_mul1_fu_573_p2;
reg   [17:0] next_mul1_reg_704;
wire   [0:0] exitcond3_fu_561_p2;
reg   [12:0] line_buf1_address0;
reg    line_buf1_ce0;
reg    line_buf1_we0;
wire   [7:0] line_buf1_q0;
reg   [3:0] Line_Flag2_address0;
reg    Line_Flag2_ce0;
reg    Line_Flag2_we0;
reg   [0:0] Line_Flag2_d0;
reg   [2:0] count_reg_170;
reg    ap_block_state1;
wire   [0:0] exitcond_fu_549_p2;
reg   [4:0] yi_reg_181;
wire   [0:0] exitcond8_fu_346_p2;
reg   [12:0] phi_mul_reg_192;
reg   [8:0] xi_reg_204;
wire   [0:0] exitcond4_fu_364_p2;
reg   [3:0] i_reg_215;
reg   [31:0] temp_reg_226;
reg   [31:0] temp_1_reg_260;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_13_fu_519_p2;
wire   [0:0] tmp_14_fu_532_p2;
reg   [0:0] flag_reg_238;
reg   [0:0] ap_phi_mux_flag_be_phi_fu_304_p4;
reg   [31:0] j_reg_249;
reg   [31:0] ap_phi_mux_temp_1_be_phi_fu_288_p6;
reg   [4:0] k_reg_272;
wire   [31:0] temp_2_fu_525_p2;
wire   [0:0] or_cond_fu_544_p2;
reg   [0:0] flag_be_reg_299;
reg   [4:0] yi1_reg_313;
reg   [8:0] xi2_reg_324;
reg    ap_block_state11;
reg   [17:0] phi_mul1_reg_335;
wire   [63:0] p_sum1_cast_fu_398_p1;
wire   [63:0] tmp_2_fu_415_p1;
wire  signed [63:0] p_sum_cast_fu_514_p1;
wire   [63:0] tmp_10_fu_589_p1;
wire   [12:0] tmp_33_cast_fu_388_p1;
wire   [12:0] p_sum1_fu_392_p2;
wire   [8:0] p_shl_fu_420_p3;
wire   [4:0] p_shl9_fu_432_p3;
wire   [9:0] p_shl_cast_fu_428_p1;
wire   [9:0] p_shl9_cast_fu_440_p1;
wire   [0:0] tmp_5_fu_450_p2;
wire   [0:0] tmp_6_fu_456_p2;
wire   [9:0] k_cast8_fu_484_p1;
wire   [9:0] tmp_12_fu_500_p2;
wire  signed [13:0] tmp_44_cast_fu_505_p1;
(* use_dsp48 = "no" *) wire   [13:0] p_sum_fu_509_p2;
wire   [0:0] tmp_15_fu_538_p2;
wire   [3:0] tmp_9_fu_579_p4;
wire   [9:0] tmp_7_fu_594_p0;
wire  signed [13:0] tmp_7_fu_594_p1;
reg   [10:0] ap_NS_fsm;
reg    ap_condition_268;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

filtrel_kernelXS_ncg #(
    .DataWidth( 8 ),
    .AddressRange( 8100 ),
    .AddressWidth( 13 ))
line_buf1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf1_address0),
    .ce0(line_buf1_ce0),
    .we0(line_buf1_we0),
    .d0(src_data_stream_V_dout),
    .q0(line_buf1_q0)
);

filtrel_kernelXS_ocq #(
    .DataWidth( 1 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
Line_Flag2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Line_Flag2_address0),
    .ce0(Line_Flag2_ce0),
    .we0(Line_Flag2_we0),
    .d0(Line_Flag2_d0),
    .q0(Line_Flag2_q0)
);

TOP_fuct_mul_mul_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
TOP_fuct_mul_mul_pcA_U116(
    .din0(tmp_7_fu_594_p0),
    .din1(tmp_7_fu_594_p1),
    .dout(tmp_7_fu_594_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((exitcond8_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        count_reg_170 <= count_1_reg_603;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        count_reg_170 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        flag_be_reg_299 <= 1'd0;
    end else if (((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        flag_be_reg_299 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_8_reg_665 == 1'd0) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1))))) begin
        flag_reg_238 <= ap_phi_mux_flag_be_phi_fu_304_p4;
    end else if (((exitcond6_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        flag_reg_238 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_215 <= 4'd0;
    end else if (((or_cond7_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        i_reg_215 <= i_1_reg_632;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_8_reg_665 == 1'd0) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1))))) begin
        j_reg_249 <= j_1_reg_650;
    end else if (((exitcond6_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_reg_249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((tmp_8_reg_665 == 1'd1) & (tmp_13_fu_519_p2 == 1'd0)) | ((tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0))))) begin
        k_reg_272 <= k_1_reg_669;
    end else if (((or_cond7_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        k_reg_272 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        phi_mul1_reg_335 <= 18'd0;
    end else if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
        phi_mul1_reg_335 <= next_mul1_reg_704;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_192 <= 13'd0;
    end else if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_192 <= next_mul_reg_608;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (((tmp_8_reg_665 == 1'd1) & (tmp_13_fu_519_p2 == 1'd0)) | ((tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0))))) begin
        temp_1_reg_260 <= ap_phi_mux_temp_1_be_phi_fu_288_p6;
    end else if (((or_cond7_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        temp_1_reg_260 <= temp_reg_226;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ((tmp_8_reg_665 == 1'd0) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1))))) begin
        temp_reg_226 <= temp_1_reg_260;
    end else if (((exitcond6_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        temp_reg_226 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        xi2_reg_324 <= 9'd0;
    end else if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
        xi2_reg_324 <= xi_2_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        xi_reg_204 <= 9'd0;
    end else if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        xi_reg_204 <= xi_1_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        yi1_reg_313 <= 5'd0;
    end else if (((exitcond3_fu_561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        yi1_reg_313 <= yi_2_reg_691;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        yi_reg_181 <= 5'd0;
    end else if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        yi_reg_181 <= yi_1_reg_616;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        Line_Flag2_addr_reg_637 <= tmp_2_fu_415_p1;
        tmp_3_reg_642[9 : 1] <= tmp_3_fu_444_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        count_1_reg_603 <= count_1_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_632 <= i_1_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_1_reg_650 <= j_1_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_1_reg_669 <= k_1_fu_494_p2;
        tmp_8_reg_665 <= tmp_8_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        next_mul1_reg_704 <= next_mul1_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        next_mul_reg_608 <= next_mul_fu_358_p2;
        yi_1_reg_616 <= yi_1_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond7_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_7_reg_655 <= tmp_7_fu_594_p2;
        tmp_s_reg_660 <= tmp_s_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        xi_2_reg_699 <= xi_2_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        yi_2_reg_691 <= yi_2_fu_555_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Line_Flag2_address0 = tmp_10_fu_589_p1;
    end else if ((((or_cond_fu_544_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        Line_Flag2_address0 = Line_Flag2_addr_reg_637;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Line_Flag2_address0 = tmp_2_fu_415_p1;
    end else begin
        Line_Flag2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state10) | ((or_cond_fu_544_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        Line_Flag2_ce0 = 1'b1;
    end else begin
        Line_Flag2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_fu_544_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        Line_Flag2_d0 = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        Line_Flag2_d0 = 1'd0;
    end else begin
        Line_Flag2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond6_fu_403_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((or_cond_fu_544_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
        Line_Flag2_we0 = 1'b1;
    end else begin
        Line_Flag2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond8_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_flag_be_phi_fu_304_p4 = 1'd1;
    end else begin
        ap_phi_mux_flag_be_phi_fu_304_p4 = flag_be_reg_299;
    end
end

always @ (*) begin
    if ((((tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (or_cond_fu_544_p2 == 1'd0) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((or_cond_fu_544_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1) & (tmp_8_reg_665 == 1'd1) & (tmp_14_fu_532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        ap_phi_mux_temp_1_be_phi_fu_288_p6 = temp_1_reg_260;
    end else if (((tmp_8_reg_665 == 1'd1) & (tmp_13_fu_519_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_temp_1_be_phi_fu_288_p6 = temp_2_fu_525_p2;
    end else begin
        ap_phi_mux_temp_1_be_phi_fu_288_p6 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond8_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)) | ((1'd1 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)))) begin
        dst_data_stream_V_blk_n = dst_data_stream_V_full_n;
    end else begin
        dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_268)) begin
        if ((1'd1 == Line_Flag2_q0)) begin
            dst_data_stream_V_din = 8'd0;
        end else if ((1'd0 == Line_Flag2_q0)) begin
            dst_data_stream_V_din = 8'd255;
        end else begin
            dst_data_stream_V_din = 'bx;
        end
    end else begin
        dst_data_stream_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'd0 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)) | (~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'd1 == Line_Flag2_q0) & (1'b1 == ap_CS_fsm_state11)))) begin
        dst_data_stream_V_write = 1'b1;
    end else begin
        dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buf1_address0 = p_sum_cast_fu_514_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buf1_address0 = p_sum1_cast_fu_398_p1;
    end else begin
        line_buf1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        line_buf1_ce0 = 1'b1;
    end else begin
        line_buf1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        line_buf1_we0 = 1'b1;
    end else begin
        line_buf1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond7_fu_376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        src_data_stream_V_blk_n = src_data_stream_V_empty_n;
    end else begin
        src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        src_data_stream_V_read = 1'b1;
    end else begin
        src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond8_fu_346_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond4_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0)) & (exitcond7_fu_376_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((exitcond6_fu_403_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((or_cond7_fu_462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & ((tmp_8_reg_665 == 1'd0) | ((tmp_14_fu_532_p2 == 1'd1) & (tmp_13_fu_519_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond_fu_549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((exitcond3_fu_561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state11 = (((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = ((exitcond7_fu_376_p2 == 1'd0) & (src_data_stream_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_268 = (~(((1'd0 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0)) | ((1'd1 == Line_Flag2_q0) & (dst_data_stream_V_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state11));
end

assign count_1_fu_352_p2 = (count_reg_170 + 3'd1);

assign exitcond3_fu_561_p2 = ((xi2_reg_324 == 9'd270) ? 1'b1 : 1'b0);

assign exitcond4_fu_364_p2 = ((yi_reg_181 == 5'd30) ? 1'b1 : 1'b0);

assign exitcond6_fu_403_p2 = ((i_reg_215 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond7_fu_376_p2 = ((xi_reg_204 == 9'd270) ? 1'b1 : 1'b0);

assign exitcond8_fu_346_p2 = ((count_reg_170 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_fu_549_p2 = ((yi1_reg_313 == 5'd30) ? 1'b1 : 1'b0);

assign i_1_fu_409_p2 = (i_reg_215 + 4'd1);

assign j_1_fu_468_p2 = (j_reg_249 + 32'd1);

assign k_1_fu_494_p2 = (k_reg_272 + 5'd1);

assign k_cast8_fu_484_p1 = k_reg_272;

assign next_mul1_fu_573_p2 = (phi_mul1_reg_335 + 18'd547);

assign next_mul_fu_358_p2 = (phi_mul_reg_192 + 13'd270);

assign or_cond7_fu_462_p2 = (tmp_6_fu_456_p2 & tmp_5_fu_450_p2);

assign or_cond_fu_544_p2 = (tmp_s_reg_660 & tmp_15_fu_538_p2);

assign p_shl9_cast_fu_440_p1 = p_shl9_fu_432_p3;

assign p_shl9_fu_432_p3 = {{i_reg_215}, {1'd0}};

assign p_shl_cast_fu_428_p1 = p_shl_fu_420_p3;

assign p_shl_fu_420_p3 = {{i_reg_215}, {5'd0}};

assign p_sum1_cast_fu_398_p1 = p_sum1_fu_392_p2;

assign p_sum1_fu_392_p2 = (phi_mul_reg_192 + tmp_33_cast_fu_388_p1);

assign p_sum_cast_fu_514_p1 = $signed(p_sum_fu_509_p2);

assign p_sum_fu_509_p2 = ($signed(tmp_7_reg_655) + $signed(tmp_44_cast_fu_505_p1));

assign temp_2_fu_525_p2 = (temp_1_reg_260 + 32'd1);

assign tmp_10_fu_589_p1 = tmp_9_fu_579_p4;

assign tmp_12_fu_500_p2 = (tmp_3_reg_642 + k_cast8_fu_484_p1);

assign tmp_13_fu_519_p2 = ((line_buf1_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_14_fu_532_p2 = (($signed(temp_1_reg_260) > $signed(32'd30)) ? 1'b1 : 1'b0);

assign tmp_15_fu_538_p2 = ((k_reg_272 == 5'd29) ? 1'b1 : 1'b0);

assign tmp_2_fu_415_p1 = i_reg_215;

assign tmp_33_cast_fu_388_p1 = xi_reg_204;

assign tmp_3_fu_444_p2 = (p_shl_cast_fu_428_p1 - p_shl9_cast_fu_440_p1);

assign tmp_44_cast_fu_505_p1 = $signed(tmp_12_fu_500_p2);

assign tmp_5_fu_450_p2 = (($signed(j_reg_249) < $signed(32'd30)) ? 1'b1 : 1'b0);

assign tmp_6_fu_456_p2 = (flag_reg_238 ^ 1'd1);

assign tmp_7_fu_594_p0 = 14'd270;

assign tmp_7_fu_594_p1 = j_reg_249[13:0];

assign tmp_8_fu_488_p2 = ((k_reg_272 < 5'd30) ? 1'b1 : 1'b0);

assign tmp_9_fu_579_p4 = {{phi_mul1_reg_335[17:14]}};

assign tmp_s_fu_478_p2 = ((j_reg_249 == 32'd29) ? 1'b1 : 1'b0);

assign xi_1_fu_382_p2 = (xi_reg_204 + 9'd1);

assign xi_2_fu_567_p2 = (xi2_reg_324 + 9'd1);

assign yi_1_fu_370_p2 = (yi_reg_181 + 5'd1);

assign yi_2_fu_555_p2 = (yi1_reg_313 + 5'd1);

always @ (posedge ap_clk) begin
    tmp_3_reg_642[0] <= 1'b0;
end

endmodule //filtrel_kernelXS
