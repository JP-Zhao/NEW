-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CopImage220 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_V_empty_n : IN STD_LOGIC;
    src_data_stream_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC;
    HEIGHT_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    HEIGHT_empty_n : IN STD_LOGIC;
    HEIGHT_read : OUT STD_LOGIC;
    WIDTH_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    WIDTH_empty_n : IN STD_LOGIC;
    WIDTH_read : OUT STD_LOGIC );
end;


architecture behav of CopImage220 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv31_D7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000011010111";
    constant ap_const_lv31_18C : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000110001100";
    constant ap_const_lv31_123 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100100011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_i_160_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal tmp_121_i_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal HEIGHT_blk_n : STD_LOGIC;
    signal WIDTH_blk_n : STD_LOGIC;
    signal HEIGHT_read_reg_167 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal WIDTH_read_reg_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_105_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_180 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp1_fu_123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_reg_185 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_138_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_predicate_op37_write_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal i_i_reg_74 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_i_reg_85 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_cast_i_fu_96_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_i_fu_111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_i_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_cast_i_fu_129_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_i_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_i_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_fu_100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (tmp_i_160_fu_133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_i_reg_74 <= i_reg_180;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_i_reg_74 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_i_reg_85_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_100_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_i_reg_85 <= ap_const_lv31_0;
            elsif ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_i_reg_85 <= j_fu_138_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                HEIGHT_read_reg_167 <= HEIGHT_dout;
                WIDTH_read_reg_172 <= WIDTH_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_180 <= i_fu_105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_100_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp1_reg_185 <= tmp1_fu_123_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_data_stream_V_empty_n, dst_data_stream_V_full_n, HEIGHT_empty_n, WIDTH_empty_n, ap_CS_fsm_state3, tmp_i_160_fu_133_p2, ap_CS_fsm_state2, tmp_i_fu_100_p2, ap_predicate_op37_write_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_fu_100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (tmp_i_160_fu_133_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    HEIGHT_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HEIGHT_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HEIGHT_blk_n <= HEIGHT_empty_n;
        else 
            HEIGHT_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    HEIGHT_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HEIGHT_empty_n, WIDTH_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            HEIGHT_read <= ap_const_logic_1;
        else 
            HEIGHT_read <= ap_const_logic_0;
        end if; 
    end process;


    WIDTH_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, WIDTH_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            WIDTH_blk_n <= WIDTH_empty_n;
        else 
            WIDTH_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    WIDTH_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, HEIGHT_empty_n, WIDTH_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            WIDTH_read <= ap_const_logic_1;
        else 
            WIDTH_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, HEIGHT_empty_n, WIDTH_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = WIDTH_empty_n) or (ap_const_logic_0 = HEIGHT_empty_n) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_assign_proc : process(src_data_stream_V_empty_n, dst_data_stream_V_full_n, tmp_i_160_fu_133_p2, ap_predicate_op37_write_state3)
    begin
                ap_block_state3 <= (((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_i_fu_100_p2)
    begin
        if (((tmp_i_fu_100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op37_write_state3_assign_proc : process(tmp_i_160_fu_133_p2, tmp_121_i_fu_162_p2)
    begin
                ap_predicate_op37_write_state3 <= ((tmp_121_i_fu_162_p2 = ap_const_lv1_1) and (tmp_i_160_fu_133_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_i_fu_100_p2)
    begin
        if (((tmp_i_fu_100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_CS_fsm_state3, tmp_i_160_fu_133_p2, tmp_121_i_fu_162_p2)
    begin
        if (((tmp_121_i_fu_162_p2 = ap_const_lv1_1) and (tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_data_stream_V_din <= src_data_stream_V_dout;

    dst_data_stream_V_write_assign_proc : process(src_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state3, tmp_i_160_fu_133_p2, ap_predicate_op37_write_state3)
    begin
        if ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (ap_predicate_op37_write_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    i_cast_i_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_74),32));
    i_fu_105_p2 <= std_logic_vector(unsigned(i_i_reg_74) + unsigned(ap_const_lv31_1));
    j_cast_i_fu_129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_85),32));
    j_fu_138_p2 <= std_logic_vector(unsigned(j_i_reg_85) + unsigned(ap_const_lv31_1));

    src_data_stream_V_blk_n_assign_proc : process(src_data_stream_V_empty_n, ap_CS_fsm_state3, tmp_i_160_fu_133_p2)
    begin
        if (((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            src_data_stream_V_blk_n <= src_data_stream_V_empty_n;
        else 
            src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_V_read_assign_proc : process(src_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state3, tmp_i_160_fu_133_p2, ap_predicate_op37_write_state3)
    begin
        if ((not((((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op37_write_state3 = ap_const_boolean_1)) or ((tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (src_data_stream_V_empty_n = ap_const_logic_0)))) and (tmp_i_160_fu_133_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            src_data_stream_V_read <= ap_const_logic_1;
        else 
            src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_123_p2 <= (tmp_116_i_fu_117_p2 and tmp_115_i_fu_111_p2);
    tmp2_fu_156_p2 <= (tmp_119_i_fu_150_p2 and tmp_118_i_fu_144_p2);
    tmp_115_i_fu_111_p2 <= "1" when (unsigned(i_i_reg_74) > unsigned(ap_const_lv31_D7)) else "0";
    tmp_116_i_fu_117_p2 <= "1" when (unsigned(i_i_reg_74) < unsigned(ap_const_lv31_18C)) else "0";
    tmp_118_i_fu_144_p2 <= "0" when (j_i_reg_85 = ap_const_lv31_0) else "1";
    tmp_119_i_fu_150_p2 <= "1" when (unsigned(j_i_reg_85) < unsigned(ap_const_lv31_123)) else "0";
    tmp_121_i_fu_162_p2 <= (tmp2_fu_156_p2 and tmp1_reg_185);
    tmp_i_160_fu_133_p2 <= "1" when (signed(j_cast_i_fu_129_p1) < signed(WIDTH_read_reg_172)) else "0";
    tmp_i_fu_100_p2 <= "1" when (signed(i_cast_i_fu_96_p1) < signed(HEIGHT_read_reg_167)) else "0";
end behav;
