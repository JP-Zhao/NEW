-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity OvlayImage225 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_V_empty_n : IN STD_LOGIC;
    src_data_stream_V_read : OUT STD_LOGIC;
    ovlaysrc_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    ovlaysrc_data_stream_V_empty_n : IN STD_LOGIC;
    ovlaysrc_data_stream_V_read : OUT STD_LOGIC;
    dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_V_full_n : IN STD_LOGIC;
    dst_data_stream_V_write : OUT STD_LOGIC;
    StartLoc_address0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    StartLoc_ce0 : OUT STD_LOGIC;
    StartLoc_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    StartLoc_address1 : OUT STD_LOGIC_VECTOR (0 downto 0);
    StartLoc_ce1 : OUT STD_LOGIC;
    StartLoc_q1 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of OvlayImage225 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_122 : STD_LOGIC_VECTOR (8 downto 0) := "100100010";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ovlaysrc_data_stream_V_blk_n : STD_LOGIC;
    signal tmp_55_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_data_stream_V_blk_n : STD_LOGIC;
    signal tmp_56_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_7_fu_142_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_7_reg_257 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_4_fu_154_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_4_reg_265 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_reg_112 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_124 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_predicate_op59_write_state4 : BOOLEAN;
    signal ap_predicate_op62_write_state4 : BOOLEAN;
    signal ap_block_state4 : BOOLEAN;
    signal exitcond2_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal extLd26_cast_cast3_fu_160_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ult_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_176_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal extLd_cast1_cast_fu_190_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ult1_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_206_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal rev_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond2_fu_136_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_reg_112 <= i_7_reg_257;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_112 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    j_reg_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_136_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_124 <= ap_const_lv9_0;
            elsif ((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_reg_124 <= j_4_reg_265;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_7_reg_257 <= i_7_fu_142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_4_reg_265 <= j_4_fu_154_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, ap_CS_fsm_state2, ap_CS_fsm_state3, exitcond_fu_148_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4, exitcond2_fu_136_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond2_fu_136_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond_fu_148_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    StartLoc_address0 <= ap_const_lv64_0(1 - 1 downto 0);
    StartLoc_address1 <= ap_const_lv64_1(1 - 1 downto 0);

    StartLoc_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            StartLoc_ce0 <= ap_const_logic_1;
        else 
            StartLoc_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    StartLoc_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            StartLoc_ce1 <= ap_const_logic_1;
        else 
            StartLoc_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, tmp_55_fu_232_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4)
    begin
                ap_block_state4 <= ((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond2_fu_136_p2)
    begin
        if (((exitcond2_fu_136_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op59_write_state4_assign_proc : process(tmp_55_fu_232_p2, tmp_56_fu_238_p2)
    begin
                ap_predicate_op59_write_state4 <= ((tmp_56_fu_238_p2 = ap_const_lv1_0) and (tmp_55_fu_232_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op62_write_state4_assign_proc : process(tmp_55_fu_232_p2, tmp_56_fu_238_p2)
    begin
                ap_predicate_op62_write_state4 <= ((tmp_56_fu_238_p2 = ap_const_lv1_1) and (tmp_55_fu_232_p2 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    dst_data_stream_V_blk_n_assign_proc : process(dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, tmp_56_fu_238_p2)
    begin
        if ((((tmp_55_fu_232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_56_fu_238_p2 = ap_const_lv1_1) and (tmp_55_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_56_fu_238_p2 = ap_const_lv1_0) and (tmp_55_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            dst_data_stream_V_blk_n <= dst_data_stream_V_full_n;
        else 
            dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dst_data_stream_V_din_assign_proc : process(src_data_stream_V_dout, src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4)
    begin
        if ((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op62_write_state4 = ap_const_boolean_1))) then 
            dst_data_stream_V_din <= ap_const_lv8_0;
        elsif (((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (tmp_55_fu_232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) then 
            dst_data_stream_V_din <= src_data_stream_V_dout;
        else 
            dst_data_stream_V_din <= "XXXXXXXX";
        end if; 
    end process;


    dst_data_stream_V_write_assign_proc : process(src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4)
    begin
        if (((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (tmp_55_fu_232_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or (not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) then 
            dst_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_136_p2 <= "1" when (i_reg_112 = ap_const_lv8_B4) else "0";
    exitcond_fu_148_p2 <= "1" when (j_reg_124 = ap_const_lv9_122) else "0";
    extLd26_cast_cast3_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(StartLoc_q0),8));
    extLd_cast1_cast_fu_190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(StartLoc_q1),9));
    i_7_fu_142_p2 <= std_logic_vector(unsigned(i_reg_112) + unsigned(ap_const_lv8_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond2_fu_136_p2)
    begin
        if (((exitcond2_fu_136_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j_4_fu_154_p2 <= std_logic_vector(unsigned(j_reg_124) + unsigned(ap_const_lv9_1));

    ovlaysrc_data_stream_V_blk_n_assign_proc : process(ovlaysrc_data_stream_V_empty_n, ap_CS_fsm_state4, tmp_55_fu_232_p2)
    begin
        if (((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ovlaysrc_data_stream_V_blk_n <= ovlaysrc_data_stream_V_empty_n;
        else 
            ovlaysrc_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ovlaysrc_data_stream_V_read_assign_proc : process(src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4)
    begin
        if ((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (tmp_55_fu_232_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ovlaysrc_data_stream_V_read <= ap_const_logic_1;
        else 
            ovlaysrc_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev1_fu_200_p2 <= (ult1_fu_194_p2 xor ap_const_lv1_1);
    rev_fu_170_p2 <= (ult_fu_164_p2 xor ap_const_lv1_1);

    src_data_stream_V_blk_n_assign_proc : process(src_data_stream_V_empty_n, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            src_data_stream_V_blk_n <= src_data_stream_V_empty_n;
        else 
            src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_V_read_assign_proc : process(src_data_stream_V_empty_n, ovlaysrc_data_stream_V_empty_n, dst_data_stream_V_full_n, ap_CS_fsm_state4, tmp_55_fu_232_p2, ap_predicate_op59_write_state4, ap_predicate_op62_write_state4)
    begin
        if ((not(((src_data_stream_V_empty_n = ap_const_logic_0) or ((tmp_55_fu_232_p2 = ap_const_lv1_0) and (dst_data_stream_V_full_n = ap_const_logic_0)) or ((tmp_55_fu_232_p2 = ap_const_lv1_1) and (ovlaysrc_data_stream_V_empty_n = ap_const_logic_0)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op62_write_state4 = ap_const_boolean_1)) or ((dst_data_stream_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state4 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            src_data_stream_V_read <= ap_const_logic_1;
        else 
            src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_220_p2 <= (tmp_52_fu_184_p2 and rev_fu_170_p2);
    tmp2_fu_226_p2 <= (tmp_54_fu_214_p2 and rev1_fu_200_p2);
    tmp_52_fu_184_p2 <= "1" when (unsigned(i_reg_112) < unsigned(tmp_s_fu_176_p3)) else "0";
    tmp_53_fu_206_p3 <= (ap_const_lv8_87 & StartLoc_q1);
    tmp_54_fu_214_p2 <= "1" when (unsigned(j_reg_124) < unsigned(tmp_53_fu_206_p3)) else "0";
    tmp_55_fu_232_p2 <= (tmp2_fu_226_p2 and tmp1_fu_220_p2);
    tmp_56_fu_238_p2 <= "1" when (ovlaysrc_data_stream_V_dout = ap_const_lv8_0) else "0";
    tmp_s_fu_176_p3 <= (ap_const_lv7_5A & StartLoc_q0);
    ult1_fu_194_p2 <= "1" when (unsigned(j_reg_124) < unsigned(extLd_cast1_cast_fu_190_p1)) else "0";
    ult_fu_164_p2 <= "1" when (unsigned(i_reg_112) < unsigned(extLd26_cast_cast3_fu_160_p1)) else "0";
end behav;
